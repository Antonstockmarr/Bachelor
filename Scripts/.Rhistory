a <- a + 10
a <- a + 10
a
(7.5-3)/(2019-1960)
(7.5-3)/(2019-1960)
45*10^6/0.005
pop_1960 <- 3*10^9
pop_2019 <- 7.5*10^9
diff_year <- 2019-1960
rate <- (pop_2019-pop_1960)/diff_year
area_earth <- 45*10^6
sqM_pers <- 0.005
dead <- area_earth/sqM_pers
x <- rnorm(100)
plot(x)
hej <- rnorm(100)
plot(hej)
x1 <- rnorm(100); x2 <- rnorm(100); x3 <- rnorm(100)
t = data.frame( a = x1,
b = x1+x2,
c = x1+x2+x3)
plot(t$a, type="l", ylim=range(t),
lwd=3, col=rgb(1,0,0,0.3))
lines(t$b, type="s", lwd=2,
col=rgb(0.3,0.4,0.3,0.9))
points(t$c, pch=20, cex=4,
col=rgb(0,0,1,0.3))
# population growth
a <-  60e6
# uncertainty of population
asd <- 10e6
# number of repeats
nrep <- 10
# time in the future to simulate
ntime <- 30
# matrix to collect data
pop <- matrix(NA, # fill with NA
nrow = nrep, # number of rows
ncol = ntime) # number of columns
# initiate population
pop[,1] <- 7.5e9
for (i in 1:nrep)
{
# draw a growth rate from normal distribution
growth <- rnorm(n = 1, mean = a, sd = asd)
for (j in 2:ntime)
{
#  progress population
pop[i,j] <- pop[i,j-1]+growth
}
}
matplot(t(pop),type="l",xlab="time from 2019 [years]",ylab="population of earth")
abline(h=9e9,col=2,lty=2,lwd=2)
legend("topleft","End of the world",col=2,lty=2,lwd=2)
grid()
pop
matplot(t(pop),type="l",xlab="time from 2019 [years]",ylab="population of earth")
view(t(pop))
View(t(pop))
# population growth
a <-  60e6
# uncertainty of population
asd <- 10e6
# number of repeats
nrep <- 10
# time in the future to simulate
ntime <- 30
# matrix to collect data
pop <- matrix(NA, # fill with NA
nrow = nrep, # number of rows
ncol = ntime) # number of columns
# initiate population
pop[,1] <- 7.5e9
for (i in 1:nrep)
{
# draw a growth rate from normal distribution
growth <- rnorm(n = 1, mean = a, sd = asd)
for (j in 2:ntime)
{
#  progress population
pop[i,j] <- pop[i,j-1]+growth
}
}
matplot(t(pop),type="l",xlab="time from 2019 [years]",ylab="population of earth")
abline(h=9e9,col=2,lty=2,lwd=2)
legend("topleft","End of the world",col=2,lty=2,lwd=2)
grid()
?library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
create_plot3 <- function(N,r,...) {
t <- 1:10
Nt <- N*exp(r*t)
plot(t,Nt,...)
}
?library(shiny)
create_plot3(1,1.5)
create_plot3(1,1.5,type = "l")
create_plot3(1,log(1.5),type = "l")
shinyApp(
ui = fluidPage(
sliderInput("slider1",
label = "Intrinsic rate",
min = -0.15,
max = .15,
value = 0.01,
step=0.01),
plotOutput('plot1')
),
server = function(input, output) {
output$plot1 <- renderPlot({
curve(7.5e9*exp(input$slider1*x),
from=0,
to=30,
xlab="time from 2019 [years]",
ylab="population of earth",
lwd=2,col=3)
grid()
abline(h=9e9,col=2,lty=2,lwd=2)
legend("topleft","End of the world",col=2,lty=2,lwd=2)
})
},
options = list(height = 500)
)
library("shiny")
library("shiny")
?ode
?ode
plotNew(log(1.5),1,1)
plotNew <- function(rate,dt,N0){
# allocating memory
N <- 10
n <- rep(NA, N)
n[1] <- N0
for (i in 2:N) {
n[i] <- n[i-1] + rate * n[i-1] * dt
}
plot(1:10,n,...)
}
plotNew(log(1.5),1,1)
plotNew <- function(rate,dt,N0,...){
# allocating memory
N <- 10
n <- rep(NA, N)
n[1] <- N0
for (i in 2:N) {
n[i] <- n[i-1] + rate * n[i-1] * dt
}
plot(1:10,n,...)
}
plotNew(log(1.5),1,1)
plotNew(log(1.5),1,1,type="l")
plotNew(log(1.5),1,1)
plotNew <- function(rate,dt,N0,...){
# allocating memory
N <- 10
n <- rep(NA, N)
n[1] <- N0
for (i in 2:N) {
n[i] <- n[i-1] + rate * n[i-1] * dt
}
plot(1:10,n,type="l",...)
}
plotNew(log(1.5),1,1)
plotNew(log(1.5),9,1)
install.packages("deSolve")
install.packages("data.table")
?data.table
?data.table
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
## Loading data
dat <- read.csv('../DistrictHeatingTestSample.csv', header=TRUE, sep = "\t")
head(dat)
str(dat)
## Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
cons <- data.table()
install.packages("data.table")
library("data.table")
cons <- data.table()
file.names <- dir(data.path, pattern =".csv")
for(i in 1:length(file.names)){
df.temp <- read.table(paste(data.path,file.names[i], sep = ""),sep=";", stringsAsFactors=FALSE, header = TRUE)
cons <- rbind(cons, df.temp)
}
df.temp
cons
## Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
cons <- data.table()
file.names <- dir(data.path, pattern =".csv")
for(i in 1:length(file.names)){
df.temp <- read.table(paste(data.path,file.names[i], sep = ""),sep=";", stringsAsFactors=FALSE, header = TRUE)
cons <- rbind(cons, df.temp)
}
file.names[2]
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
## Loading data
dat <- read.csv('../DistrictHeatingTestSample.csv', header=TRUE, sep = "\t")
head(dat)
str(dat)
## Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = matrix(c(1,n),nrow=n)
cons <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
df.temp <- read.table(paste(data.path,file.names[i], sep = ""),sep="\t", stringsAsFactors=FALSE, header = TRUE)
}
else
{
df.temp <- read.table(paste(data.path,file.names[i], sep = ""),sep=";", stringsAsFactors=FALSE, header = TRUE)
df.temp$X <- NULL
}
cons[[i]] <- df.temp
names(cons[[i]])[1] = 'StartDateTime'
Datalengths[i] = length(df.temp)
}
Datalengths
str(cons[[1]])
?read.table
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
## Loading data
dat <- read.csv('../DistrictHeatingTestSample.csv', header=TRUE, sep = "\t")
head(dat)
str(dat)
## Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = matrix(c(1,n),nrow=n)
cons <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
}
else
{
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
df.temp$X <- NULL
}
cons[[i]] <- df.temp
names(cons[[i]])[1] = 'StartDateTime'
Datalengths[i] = length(df.temp)
}
Datalengths
View(cons)
cons[[1]]
pairs(cons)
pairs(cons[[1]])
?strftime
# Changing time
for (i in 1:n){
cons[[i]]$StartDateTime <- strftime(cons[[i]]$StartDateTime, format = "%d-%m-&Y %H:%M:%S", tz = "UTC")
}
cons[[1]]$StartDateTime
cons[[i]]$StartDateTime <- strftime(cons[[i]]$StartDateTime, format = "%d-%m-&y %H:%M:%S", tz = "UTC")
# Changing time
for (i in 1:n){
cons[[i]]$StartDateTime <- strftime(cons[[i]]$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "UTC")
}
cons[[i]]$StartDateTime <- strftime(cons[[i]]$StartDateTime, format = "%d-%m-%y %H:%M:%S", tz = "UTC")
# Changing time
for (i in 1:n){
cons[[i]]$StartDateTime <- strftime(cons[[i]]$StartDateTime, format = "%d-%m-%y %H:%M:%S", tz = "UTC")
}
cons[[i]]$StartDateTime <- strftime(cons[[i]]$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "UTC")
# Changing time
for (i in 1:n){
cons[[i]]$StartDateTime <- strftime(cons[[i]]$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "UTC")
}
# Changing time
for (i in 1:n){
cons[[i]]$StartDateTime <- strftime(cons[[i]]$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
cons[[1,2]]$StartDateTime
cons[[1]]$StartDateTime
# Changing time
for (i in 1:n){
cons[[i]]$StartDateTime <- strptime(cons[[i]]$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
cons[[i]]$StartDateTime
cons[[1]]$StartDateTime
?strptime
cons[[2]]$StartDateTime
# Changing time
for (i in 1:n){
cons[[i]]$StartDateTime <- strptime(cons[[i]]$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
cons[[2]]$StartDateTime
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
## Loading data
dat <- read.csv('../DistrictHeatingTestSample.csv', header=TRUE, sep = "\t")
head(dat)
str(dat)
## Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
cons <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
}
else
{
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
df.temp$X <- NULL
}
cons[[i]] <- df.temp
names(cons[[i]])[1] = 'StartDateTime'
Datalengths[i] = length(df.temp)
}
# Changing time
for (i in 1:n){
cons[[i]]$StartDateTime <- strptime(cons[[i]]$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
cons[[1]]$StartDateTime
# Changing time
for (i in 1:n){
cons[[i]]$StartDateTime <- strptime(cons[[i]]$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
cons[[i]]$EndDateTime <- strptime(cons[[i]]$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
cons[[1]]$EndDateTime
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
## Loading data
dat <- read.csv('../DistrictHeatingTestSample.csv', header=TRUE, sep = "\t")
head(dat)
str(dat)
## Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
cons <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
df.temp[i]$StartDateTime <- strptime(df.temp[i]$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
df.temp[i]$EndDateTime <- strptime(df.temp[i]$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
df.temp$X <- NULL
df.temp[i]$StartDateTime <- strptime(df.temp[i]$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
df.temp[i]$EndDateTime <- strptime(df.temp[i]$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
names(df.temp[[i]])[1] = 'StartDateTime'
Datalengths[i] = length(df.temp)
cons[[i]] <- df.temp
}
for(i in 1:n){
if (i == 5){
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
df.temp$StartDateTime <- strptime(df.temp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
df.temp$EndDateTime <- strptime(df.temp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
df.temp$X <- NULL
df.temp$StartDateTime <- strptime(df.temp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
df.temp$EndDateTime <- strptime(df.temp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
names(df.temp[[i]])[1] = 'StartDateTime'
Datalengths[i] = length(df.temp)
cons[[i]] <- df.temp
}
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
## Loading data
dat <- read.csv('../DistrictHeatingTestSample.csv', header=TRUE, sep = "\t")
head(dat)
str(dat)
## Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
cons <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
df.temp$StartDateTime <- strptime(df.temp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
df.temp$EndDateTime <- strptime(df.temp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
df.temp$X <- NULL
df.temp$StartDateTime <- strptime(df.temp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
df.temp$EndDateTime <- strptime(df.temp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
names(df.temp[[i]])[1] = 'StartDateTime'
Datalengths[i] = length(df.temp)
cons[[i]] <- df.temp
}
names(df.temp[[i]])[1] = 'StartDateTime'
Datalengths[i] = length(df.temp)
cons[[i]] <- df.temp
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
## Loading data
dat <- read.csv('../DistrictHeatingTestSample.csv', header=TRUE, sep = "\t")
head(dat)
str(dat)
## Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
cons <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(df.temp)[1] = 'StartDateTime'
df.temp$StartDateTime <- strptime(df.temp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
df.temp$EndDateTime <- strptime(df.temp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
df.temp$X <- NULL
names(df.temp)[1] = 'StartDateTime'
df.temp$StartDateTime <- strptime(df.temp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
df.temp$EndDateTime <- strptime(df.temp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(df.temp)
cons[[i]] <- df.temp
}
cons[[5]]$EndDateTime
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
source("data.R")
source("data.R")
str(weather)
# Reading weather data
weather <- read.table('../WeatherData_01-01-2018_09-05-2019.csv', sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
str(weather)
pairs(weather)
?as.boolean
?as.logical
?type.convert
weather$IsHistoricalEstimated <- type.convert(weather$IsHistoricalEstimated, as.is = TRUE)
weather$IsHistoricalEstimated <- type.convert(weather$IsHistoricalEstimated, na.strings = "NA", as.is = TRUE)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
# Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
data <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
dt.tmp$X <- NULL
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(dt.tmp)
data[[i]] <- dt.tmp
}
# Reading weather data
weather <- read.table('../WeatherData_01-01-2018_09-05-2019.csv', sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
str(weather)
?pairs
plot(weather$Temperature ~ weather$StartDateTime)
plot(weather)
plot(weather$Temperature)
plot(data[[1]]$Flow)
pairs(dt.tmp)
plot(data[[1]]$Flow)
pairs(data[[1]])
View(weather)
View(data)
