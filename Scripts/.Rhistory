lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
y <- c(S = S0, I = 1, R = 0)
# Den ikke-dimensionelle model
Erica_model2 <- function(t, y, p) {
with(as.list(c(y,p)), {
dsdtau <- -s*i
didtau <- s*i-i
drdtau <- i
dydt <- c(dsdtau, didtau, drdtau)
return(list(dydt))
})
}
p <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model2, parms = p)
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p <- c(beta = 1, gamma = 1)
Erica_sol <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p)
Erica_sol <- as.data.frame(Erica_sol)
plot(S ~ time, data = Erica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol, type = "l", col = 2)
lines(R ~ time, data = Erica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den dimensionelle model
Erica_model1 <- function(t, y, p) {
with(as.list(c(y,p)), {
dSdt <- -beta*S*I
dIdt <- beta*S*I-gamma*I
dRdt <- gamma*I
dydt <- c(dSdt, dIdt, dRdt)
return(list(dydt))
})
}
y <- c(S = S0, I = 1, R = 0)
p <- c(beta = beta_Erica, gamma = gamma_Erica)
Erica_sol <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p)
Erica_sol <- as.data.frame(Erica_sol)
plot(S ~ time, data = Erica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af dimensionelle model")
lines(I ~ time, data = Erica_sol, type = "l", col = 2)
lines(R ~ time, data = Erica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p <- c(beta = 1, gamma = 1)
Erica_sol <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p)
Erica_sol <- as.data.frame(Erica_sol)
plot(S ~ time, data = Erica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol, type = "l", col = 2)
lines(R ~ time, data = Erica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den dimensionelle model
Erica_model1 <- function(t, y, p) {
with(as.list(c(y,p)), {
dSdt <- -beta*S*I
dIdt <- beta*S*I-gamma*I
dRdt <- gamma*I
dydt <- c(dSdt, dIdt, dRdt)
return(list(dydt))
})
}
y <- c(S = S0, I = 1, R = 0)
p <- c(beta = beta_Erica, gamma = gamma_Erica)
Erica_sol <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p)
Erica_sol <- as.data.frame(Erica_sol)
plot(S ~ time, data = Erica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af dimensionelle model")
lines(I ~ time, data = Erica_sol, type = "l", col = 2)
lines(R ~ time, data = Erica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p1)
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den dimensionelle model
Erica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dSdt <- -beta*S*I
dIdt <- beta*S*I-gamma*I
dRdt <- gamma*I
dydt <- c(dSdt, dIdt, dRdt)
return(list(dydt))
})
}
y <- c(S = S0, I = 1, R = 0)
p <- c(beta = beta_Erica, gamma = gamma_Erica)
Erica_sol <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p)
Erica_sol <- as.data.frame(Erica_sol)
plot(S ~ time, data = Erica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af dimensionelle model")
lines(I ~ time, data = Erica_sol, type = "l", col = 2)
lines(R ~ time, data = Erica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p1)
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p1)
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
View(sol2)
View(sol2)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p1)
Erica_sol2 <- as.data.frame(Erica_sol2)
par(mfrow = c(3,1))
plot(S ~ time, data = Erica_sol2, type = "l", col = 1 main = "Numerisk loesning ved brug af ikke-dimensionelle model")
plot(I ~ time, data = Erica_sol2, type = "l", col = 2)
plot(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p1)
Erica_sol2 <- as.data.frame(Erica_sol2)
par(mfrow = c(3,1))
plot(S ~ time, data = Erica_sol2, type = "l", col = 1)
plot(I ~ time, data = Erica_sol2, type = "l", col = 2)
plot(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p1)
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
par(mfrow = c(1,1))
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p1)
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den dimensionelle model
Erica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dSdt <- -beta*S*I
dIdt <- beta*S*I-gamma*I
dRdt <- gamma*I
dydt <- c(dSdt, dIdt, dRdt)
return(list(dydt))
})
}
y <- c(S = S0, I = 1, R = 0)
p <- c(beta = beta_Erica, gamma = gamma_Erica)
Erica_sol <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p)
Erica_sol <- as.data.frame(Erica_sol)
plot(S ~ time, data = Erica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af dimensionelle model")
lines(I ~ time, data = Erica_sol, type = "l", col = 2)
lines(R ~ time, data = Erica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = c(1,1))
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den dimensionelle model
Erica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dSdt <- -beta*S*I
dIdt <- beta*S*I-gamma*I
dRdt <- gamma*I
dydt <- c(dSdt, dIdt, dRdt)
return(list(dydt))
})
}
y <- c(S = S0, I = 1, R = 0)
p <- c(beta = beta_Erica, gamma = gamma_Erica)
Erica_sol <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p)
Erica_sol <- as.data.frame(Erica_sol)
plot(S ~ time, data = Erica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af dimensionelle model")
lines(I ~ time, data = Erica_sol, type = "l", col = 2)
lines(R ~ time, data = Erica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = c(1,1))
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p1
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = c(1,1))
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = c(beta = 1,gamme = 1))
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = c(beta = 1,gamma = 1))
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
p1 <- c(beta = 1, gamma = 1)
Erica_sol2 <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = c(beta = 1,gamma = 1))
Erica_sol2 <- as.data.frame(Erica_sol2)
plot(S ~ time, data = Erica_sol2, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(I ~ time, data = Erica_sol2, type = "l", col = 2)
lines(R ~ time, data = Erica_sol2, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den dimensionelle model
Erica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dSdt <- -beta*S*I
dIdt <- beta*S*I-gamma*I
dRdt <- gamma*I
dydt <- c(dSdt, dIdt, dRdt)
return(list(dydt))
})
}
y <- c(S = S0, I = 1, R = 0)
p <- c(beta = beta_Erica, gamma = gamma_Erica)
Erica_sol <- ode(y = y, times = seq(0,150,1), func = Erica_model, parms = p)
Erica_sol <- as.data.frame(Erica_sol)
plot(S ~ time, data = Erica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af dimensionelle model")
lines(I ~ time, data = Erica_sol, type = "l", col = 2)
lines(R ~ time, data = Erica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
NonErica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dsdtau <- -s*i
didtau <- s*i-i
drdtau <- i
dydt <- c(dsdtau, didtau, drdtau)
return(list(dydt))
})
}
Nonp <- c(beta = 1, gamma = 1)
NonErica_sol <- as.data.frame(ode(y = y, times = seq(0,150,1), func = NonErica_model, parms = Nonp))
plot(s ~ time, data = NonErica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(i ~ time, data = NonErica_sol, type = "l", col = 2)
lines(r ~ time, data = NonErica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
NonErica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dsdtau <- -s*i
didtau <- s*i-i
drdtau <- i
dydt <- c(dsdtau, didtau, drdtau)
return(list(dydt))
})
}
Nony <- c(s = S0, i = 1, r = 0)
Nonp <- c(beta = 1, gamma = 1)
NonErica_sol <- as.data.frame(ode(y = y, times = seq(0,150,1), func = NonErica_model, parms = Nonp))
plot(s ~ time, data = NonErica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(i ~ time, data = NonErica_sol, type = "l", col = 2)
lines(r ~ time, data = NonErica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
NonErica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dsdtau <- -s*i
didtau <- s*i-i
drdtau <- i
dydt <- c(dsdtau, didtau, drdtau)
return(list(dydt))
})
}
Nony <- c(s = S0, i = 1, r = 0)
Nonp <- c(beta = 1, gamma = 1)
NonErica_sol <- as.data.frame(ode(y = y, times = seq(0,150,1), func = NonErica_model, parms = Nonp))
plot(s ~ time, data = NonErica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(i ~ time, data = NonErica_sol, type = "l", col = 2)
lines(r ~ time, data = NonErica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
NonErica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dsdtau <- -s*i
didtau <- s*i-i
drdtau <- i
dydt <- c(dsdtau, didtau, drdtau)
return(list(dydt))
})
}
Nony <- c(s = S0, i = 1, r = 0)
Nonp <- c(beta = 1, gamma = 1)
NonErica_sol <- as.data.frame(ode(y = Nony, times = seq(0,150,1), func = NonErica_model, parms = Nonp))
plot(s ~ time, data = NonErica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(i ~ time, data = NonErica_sol, type = "l", col = 2)
lines(r ~ time, data = NonErica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
NonErica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dsdtau <- -s*i
didtau <- s*i-i
drdtau <- i
dydt <- c(dsdtau, didtau, drdtau)
return(list(dydt))
})
}
TBar = 1/gamma_Erica
tau = 150/TBar
SBar = gamma_Erica/beta_Erica
Nony <- c(s = S0/SBar, i = 1/SBar, r = 0)
Nonp <- c(beta = 1, gamma = 1)
NonErica_sol <- as.data.frame(ode(y = Nony, times = seq(0,150,1), func = NonErica_model, parms = Nonp))
plot(s ~ time, data = NonErica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(i ~ time, data = NonErica_sol, type = "l", col = 2)
lines(r ~ time, data = NonErica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
NonErica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dsdtau <- -s*i
didtau <- s*i-i
drdtau <- i
dydt <- c(dsdtau, didtau, drdtau)
return(list(dydt))
})
}
TBar = 1/gamma_Erica
tau = 150/TBar
SBar = gamma_Erica/beta_Erica
Nony <- c(s = S0/SBar, i = 1/SBar, r = 0)
NonErica_sol <- as.data.frame(ode(y = Nony, times = seq(0,150,1), func = NonErica_model, parms = NULL))
plot(s ~ time, data = NonErica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(i ~ time, data = NonErica_sol, type = "l", col = 2)
lines(r ~ time, data = NonErica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
NonErica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dsdtau <- -s*i
didtau <- s*i-i
drdtau <- i
dydt <- c(dsdtau, didtau, drdtau)
return(list(dydt))
})
}
TBar = 1/gamma_Erica
tau = 150/TBar
SBar = gamma_Erica/beta_Erica
Nony <- c(s = S0/SBar, i = 1/SBar, r = 0)
NonErica_sol <- as.data.frame(ode(y = Nony, times = seq(0,tau,1/TBar), func = NonErica_model, parms = NULL))
plot(s ~ time, data = NonErica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(i ~ time, data = NonErica_sol, type = "l", col = 2)
lines(r ~ time, data = NonErica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
NonErica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dsdtau <- -s*i
didtau <- s*i-i
drdtau <- i
dydt <- c(dsdtau, didtau, drdtau)
return(list(dydt))
})
}
TBar = 1/gamma_Erica
tau = 150/TBar
SBar = gamma_Erica/beta_Erica
Nony <- c(s = S0/SBar, i = 1/SBar, r = 0)
NonErica_sol <- as.data.frame(ode(y = Nony, times = seq(0,tau,1/TBar), func = NonErica_model, parms = NULL))
plot(s*SBar ~ time, data = NonErica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(i*Sbar ~ time, data = NonErica_sol, type = "l", col = 2)
lines(r*Sbar ~ time, data = NonErica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
# Den ikke-dimensionelle model
NonErica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dsdtau <- -s*i
didtau <- s*i-i
drdtau <- i
dydt <- c(dsdtau, didtau, drdtau)
return(list(dydt))
})
}
TBar = 1/gamma_Erica
tau = 150/TBar
SBar = gamma_Erica/beta_Erica
Nony <- c(s = S0/SBar, i = 1/SBar, r = 0)
NonErica_sol <- as.data.frame(ode(y = Nony, times = seq(0,tau,1/TBar), func = NonErica_model, parms = NULL))
plot(s*SBar ~ time, data = NonErica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af ikke-dimensionelle model")
lines(i*SBar ~ time, data = NonErica_sol, type = "l", col = 2)
lines(r*SBar ~ time, data = NonErica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
which.max(NonErica_sol$i)
NonErica_sol[73,]
NonErica_sol[73,3]*SBar
sum(Erica_sol[150,3:4])
sum/S0
sum <- sum(Erica_sol[150,3:4])
sum/S0
sum1/sum(Erica_sol[150,2:4])
sum1 <- sum(Erica_sol[150,3:4])
sum1/sum(Erica_sol[150,2:4])
sum1/sum(Erica_sol[150,2:4])*100
Erica_sol <- ode(y = y, times = seq(0,160,1), func = Erica_model, parms = p)
tail(Erica_sol)
tail(Erica_sol)
End_epi <- min(Erica_sol$I < 1)
End_epi <- min(Erica_sol$I < 1)
End_epi <- which.min(Erica_sol$I < 1))
End_epi <- which.min(Erica_sol$I < 1)
End_epi <- min(which(Erica_sol$I < 1))
# Den dimensionelle model
Erica_model <- function(t, y, p) {
with(as.list(c(y,p)), {
dSdt <- -beta*S*I
dIdt <- beta*S*I-gamma*I
dRdt <- gamma*I
dydt <- c(dSdt, dIdt, dRdt)
return(list(dydt))
})
}
y <- c(S = S0, I = 1, R = 0)
p <- c(beta = beta_Erica, gamma = gamma_Erica)
Erica_sol <- ode(y = y, times = seq(0,160,1), func = Erica_model, parms = p)
Erica_sol <- as.data.frame(Erica_sol)
plot(S ~ time, data = Erica_sol, type = "l", col = 1, ylim = c(0,8000), main = "Numerisk loesning ved brug af dimensionelle model")
lines(I ~ time, data = Erica_sol, type = "l", col = 2)
lines(R ~ time, data = Erica_sol, type = "l", col = 3)
legend(x = "topright", legend = c("S", "I", "R"), col = c(1,2,3), lty = 1, cex = 0.85)
tail(Erica_sol)
End_epi <- min(which(Erica_sol$I < 1))
End_epi
min(which(Erica_sol$I < 1))
S0 - N
N <- 6401
S0 - N
imax/smax
imax <- 812
smax <- 1100
imax/smax
?predict
(0.22-0.23)/(4348-0)
(0.23-0.22)/(0-4348)
0.23/(2.299908e-06)
source('~/Dropbox/DTU/6. semester/Bachelorprojekt F19/Bachelor/scripts/data.R', echo=TRUE)
View(weatherCons)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
source("data.R")
source("stepP.R")
library(foreach)
library(doParallel)
# setup parallel
cores = detectCores()
# Defining new data set where the summer period is left out
model.data <- weatherCons
lmMultiple <- vector(mode="list", length = n)
#
# for (i in 1:2) {
#   model.tmp <- model.data[[i]]
#   model.tmp <- model.tmp[model.tmp$Temperature <= 12,]
#
#   lmMultiple[[i]] <- stepP(lm(Consumption ~ Temperature*WindSpeed*WindDirection*SunHour*Condition*
#                      UltravioletIndex*MeanSeaLevelPressure+Holiday, data = model.tmp))
# }
#
summary(lmMultiple[[5]]$object)
plot(lmMultiple[[2]]$object)
c <- makeCluster(cores[1]-1)
registerDoParallel(c)
lmMultiple <- foreach(i=1:n) %dopar% {
model.tmp <- model.data[[i]]
model.tmp <- model.tmp[model.tmp$Temperature <= 12,]
MultiModel <- stepP(lm(Consumption ~ Temperature*WindSpeed*WindDirection*SunHour*Condition*
UltravioletIndex*MeanSeaLevelPressure+Holiday, data = model.tmp))
MultiModel
}
#stop cluster
stopCluster(c)
summary(lmMultiple[[5]]$object)
