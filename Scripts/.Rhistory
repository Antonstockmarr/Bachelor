}
# Changing time
for (i in 1:n){
cons[[i]]$StartDateTime <- strptime(cons[[i]]$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
cons[[i]]$EndDateTime <- strptime(cons[[i]]$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
source("data.R")
rm(i,n,file.names,data.path,df.temp,Datalengths)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
source("data.R")
View(cons)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
## Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
data <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(df.temp)[1] = 'StartDateTime'
df.temp$StartDateTime <- strptime(df.temp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
df.temp$EndDateTime <- strptime(df.temp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
df.temp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
df.temp$X <- NULL
names(df.temp)[1] = 'StartDateTime'
df.temp$StartDateTime <- strptime(df.temp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
df.temp$EndDateTime <- strptime(df.temp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(df.temp)
data[[i]] <- df.temp
}
rm(i,n,file.names,data.path,df.temp,Datalengths)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
## Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
data <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
dt.tmp$X <- NULL
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(dt.tmp)
data[[i]] <- dt.tmp
}
rm(i,n,file.names,data.path,dt.tmp,Datalengths)
Weather <- read.table('../WeatherData_01-01-2018_09-05-2019.csv', sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
Weather
str(Weather)
weather$StartDateTime = strptime(Weather$StartDateTime,format='%d/%m/%Y %H.%M',tz = 'GMT')
Weather$StartDateTime = strptime(Weather$StartDateTime,format='%d/%m/%Y %H.%M',tz = 'GMT')
str(Weather)
Weather$StartDateTime
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
# Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
data <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
dt.tmp$X <- NULL
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(dt.tmp)
data[[i]] <- dt.tmp
}
# Reading weather data
weather <- read.table('../WeatherData_01-01-2018_09-05-2019.csv', sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
str(weather)
weather$StartDateTime = strptime(weather$StartDateTime,format='%d/%m/%Y %H.%M',tz = 'GMT')
weather$IsHistoricalEstimated=weather$IsHistoricalEstimated=="True"
rm(i,n,file.names,data.path,dt.tmp,Datalengths)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
source("data.R")
pairs(data[[1]])
Testdata = data[[42]]
Testdata <- data[[42]]
Testdata$EndDateTime <- NULL
Testdata$StartDateTime <- 1:length(Testdata$StartDateTime)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
source("data.R")
test.data <- data[[42]]
test.data$EndDateTime <- NULL
test.data$StartDateTime <- 1:length(test.data$StartDateTime)
pairs(test.data)
pairs(test.data)
plot(test.data$Flow ~ test.data$StartDateTime)
plot(test.data$Flow ~ test.data$StartDateTime)
test.data <- data[[1]]
test.data$EndDateTime <- NULL
test.data$StartDateTime <- 1:length(test.data$StartDateTime)
pairs(test.data)
plot(test.data$Flow ~ test.data$StartDateTime)
test.data <- data[[18]]
test.data$EndDateTime <- NULL
test.data$StartDateTime <- 1:length(test.data$StartDateTime)
plot(test.data$Flow ~ test.data$StartDateTime)
test.data <- data[[18]]
test.data$EndDateTime <- NULL
test.data$StartDateTime <- 1:length(test.data$StartDateTime)
plot(test.data$Flow ~ test.data$StartDateTime)
test.data <- data[[42]]
test.data$EndDateTime <- NULL
test.data$StartDateTime <- 1:length(test.data$StartDateTime)
plot(test.data$Flow ~ test.data$StartDateTime)
test.data <- data[[18]]
test.data$EndDateTime <- NULL
test.data$StartDateTime <- 1:length(test.data$StartDateTime)
plot(test.data$Flow ~ test.data$StartDateTime)
plot(test.data$Flow[test.data$Flow<0.4] ~ test.data$StartDateTime)
test.data <- data[[42]]
test.data$EndDateTime <- NULL
test.data$StartDateTime <- 1:length(test.data$StartDateTime)
pairs(test.data)
plot(test.data$Flow[test.data$Flow<0.4] ~ test.data$StartDateTime)
plot(test.data$Flow[test.data$Flow<0.4] ~ test.data$StartDateTime[test.data$Flow<0.4])
test.data <- data[[1]]
test.data$EndDateTime <- NULL
test.data$StartDateTime <- 1:length(test.data$StartDateTime)
plot(test.data$Flow[test.data$Flow<0.4] ~ test.data$StartDateTime[test.data$Flow<0.4])
sum(test.data$TemperatureIn-test.data$TemperatureOut) - sum(test.data$CoolingDegree)
data[[1]]$StartDateTime
tail(data[[1]]$StartDateTime)
tail(data[[2]]$StartDateTime)
tail(data[[42]]$StartDateTime)
# Dates of house data
StartDays = c(rep(NA,n))
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
# Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
data <- vector(mode="list", length = n)
for(i in 1:n){
if (i == 5){
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
dt.tmp$X <- NULL
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(dt.tmp)
data[[i]] <- dt.tmp
}
# Reading weather data
weather <- read.table('../WeatherData_01-01-2018_09-05-2019.csv', sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
str(weather)
weather$StartDateTime = strptime(weather$StartDateTime,format='%d/%m/%Y %H.%M',tz = 'GMT')
weather$IsHistoricalEstimated=weather$IsHistoricalEstimated=="True"
# Dates of house data
StartDays = c(rep(NA,n))
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
# Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
data <- vector(mode="list", length = n)
# Looking at bounds of dates for data
StartDays = c(rep(NA,n))
EndDays = c(rep(NA,n))
for(i in 1:n){
if (i == 5){
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
dt.tmp$X <- NULL
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(dt.tmp)
data[[i]] <- dt.tmp
StartDays[i]= dt.tmp$StartDateTime[1]
EndDays[i]=dt.tmp$StartDateTime[end]
}
# Reading weather data
weather <- read.table('../WeatherData_01-01-2018_09-05-2019.csv', sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
str(weather)
weather$StartDateTime = strptime(weather$StartDateTime,format='%d/%m/%Y %H.%M',tz = 'GMT')
weather$IsHistoricalEstimated=weather$IsHistoricalEstimated=="True"
# Dates of house data
rm(i,n,file.names,data.path,dt.tmp,Datalengths)
EndDays[i]=dt.tmp$StartDateTime[length(dt.tmp$StartDateTime)]
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
# Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
data <- vector(mode="list", length = n)
# Looking at bounds of dates for data
StartDays = c(rep(NA,n))
EndDays = c(rep(NA,n))
for(i in 1:n){
if (i == 5){
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
dt.tmp$X <- NULL
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(dt.tmp)
data[[i]] <- dt.tmp
StartDays[i]= dt.tmp$StartDateTime[1]
EndDays[i]=dt.tmp$StartDateTime[length(dt.tmp$StartDateTime)]
}
# Reading weather data
weather <- read.table('../WeatherData_01-01-2018_09-05-2019.csv', sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
str(weather)
weather$StartDateTime = strptime(weather$StartDateTime,format='%d/%m/%Y %H.%M',tz = 'GMT')
weather$IsHistoricalEstimated=weather$IsHistoricalEstimated=="True"
# Dates of house data
rm(i,n,file.names,data.path,dt.tmp,Datalengths)
warnings()
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
# Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
data <- vector(mode="list", length = n)
# Looking at bounds of dates for data
StartDays = c(rep(NA,n))
EndDays = c(rep(NA,n))
for(i in 1:n){
if (i == 5){
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
dt.tmp$X <- NULL
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(dt.tmp)
data[[i]] <- dt.tmp
StartDays[i]= dt.tmp$StartDateTime[1]
EndDays[i]=dt.tmp$StartDateTime[length(dt.tmp$StartDateTime)]
}
# Reading weather data
weather <- read.table('../WeatherData_01-01-2018_09-05-2019.csv', sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
str(weather)
dt.tmp$StartDateTime[1]
View(data)
# Looking at bounds of dates for data
StartDays = as.POSIXlt(c(rep(NA,n)))
EndDays = as.POSIXlt(c(rep(NA,n)))
for(i in 1:n){
if (i == 5){
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
dt.tmp$X <- NULL
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(dt.tmp)
data[[i]] <- dt.tmp
StartDays[i]= dt.tmp$StartDateTime[1]
EndDays[i]=dt.tmp$StartDateTime[length(dt.tmp$StartDateTime)]
}
dt.tmp$StartDateTime[1]
StartDays[i]
StartDays[i]= dt.tmp$StartDateTime[1]
EndDays[i]=dt.tmp$StartDateTime[length(dt.tmp$StartDateTime)]
# Looking at bounds of dates for data
StartDays = as.POSIXlt(c(rep(NA,n)))
EndDays = as.POSIXlt(c(rep(NA,n)))
StartDays = data[[1]]$StartDateTime[1]
StartDays
# Looking at bounds of dates for data
StartDays = as.POSIXlt(c(rep(NA,n)))
EndDays = as.POSIXlt(c(rep(NA,n)))
StartDays[1] = data[[1]]$StartDateTime[1]
StartDays[1]
data[[1]]$StartDateTime[1]
StartDays[1]
EndDays = c(rep(as.POSIXlt(NA),n))
StartDays[1] = data[[1]]$StartDateTime[1]
# Looking at bounds of dates for data
StartDays = c(rep(as.POSIXlt(NA),n))
EndDays = c(rep(as.POSIXlt(NA),n))
StartDays[1] = data[[1]]$StartDateTime[1]
StartDays[1] = as.POSIXlt(data[[1]]$StartDateTime[1])
# Looking at bounds of dates for data
StartDays = c(rep(as.POSIXlt(NA),n))
StartDays
StartDays[1]
as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays[1]= as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
# Looking at bounds of dates for data
StartDays <- c(rep(as.POSIXlt(NA),n))
EndDays <- c(rep(as.POSIXlt(NA),n))
StartDays[1] = as.POSIXlt(data[[1]]$StartDateTime[1])
# Looking at bounds of dates for data
StartDays <- data.frame(date=as.POSIXct("2010-12-07 08:00:00"), value=NA)
StartDays
# Looking at bounds of dates for data
StartDays <- data.frame(date=as.POSIXct("2010-12-07 08:00:00"))
# Looking at bounds of dates for data
StartDays <- data.frame(date=as.POSIXct("NA"))
# Looking at bounds of dates for data
StartDays <- data.frame(date=as.POSIXct(NA))
StartDays[1] = as.POSIXlt(data[[1]]$StartDateTime[1])
# Looking at bounds of dates for data
StartDays <- data.frame(date=rep(as.POSIXct(NA),n)
StartDays[1] = as.POSIXlt(data[[1]]$StartDateTime[1])
# Looking at bounds of dates for data
StartDays <- data.frame(date=rep(as.POSIXct(NA),n))
StartDays[1] = as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays[1] = as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- as.POSIXlt(data[[:]]$StartDateTime[1])
StartDays <- as.POSIXlt(data$StartDateTime[1])
StartDays <- as.POSIXlt(data[[,]]$StartDateTime[1])
StartDays <- as.POSIXlt(data[[]]$StartDateTime[1])
StartDays <- list(rep(NA),n)
StartDays <- list(rep(NA,n))
StartDays
StartDays <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0))
library("data.table")
# Loading all data
data.path = "../Watts_DistrictHeatingData_2018/"
file.names <- dir(data.path, pattern =".csv")
n <- length(file.names)
Datalengths = rep(c(1,n),nrow=n)
data <- vector(mode="list", length = n)
# Looking at bounds of dates for data
StartDays <- list(rep(NA,n))
EndDays <- list(rep(NA,n))
for(i in 1:n){
if (i == 5){
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d/%m/%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d/%m/%Y %H.%M", tz = "GMT")
}
else
{
dt.tmp <- read.table(paste(data.path,file.names[i], sep = ""), sep=";", stringsAsFactors=FALSE, header = TRUE, dec=',')
dt.tmp$X <- NULL
names(dt.tmp)[1] = 'StartDateTime'
dt.tmp$StartDateTime <- strptime(dt.tmp$StartDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
dt.tmp$EndDateTime <- strptime(dt.tmp$EndDateTime, format = "%d-%m-%Y %H:%M:%S", tz = "GMT")
}
Datalengths[i] = length(dt.tmp)
data[[i]] <- dt.tmp
StartDays[i]= dt.tmp$StartDateTime[1]
EndDays[i]=dt.tmp$StartDateTime[length(dt.tmp$StartDateTime)]
}
# Reading weather data
weather <- read.table('../WeatherData_01-01-2018_09-05-2019.csv', sep="\t", stringsAsFactors=FALSE, header = TRUE, dec=',')
str(weather)
weather$StartDateTime = strptime(weather$StartDateTime,format='%d/%m/%Y %H.%M',tz = 'GMT')
weather$IsHistoricalEstimated=weather$IsHistoricalEstimated=="True"
warnings()
StartDays[1] =  data[[1]]$StartDateTime[1]
data[[1]]$StartDateTime[1]
StartDays[1] =  as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- list(rep(NA),n)
StartDays <- as.POSIXlt(data$StartDateTime[1])
StartDays <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- list(rep(NA),n)
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- list(rep(NA),n)
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays[1]
StartDays <- list(rep(as.POXITlt(NA)),n)
StartDays <- list(rep(as.POXIT(NA)),n)
StartDays <- list(rep(as.POSIXlt(NA)),n)
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- list(rep(as.POSIXlt(NA)),n)
StartDays <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- c(rep(as.POSIXlt(NA)),n)
StartDays <- c(rep(as.POSIXlt(NA)),n)
StartDays <- c(rep((NA)),n)
StartDays <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- c(rep((NA)),n)
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- c(rep(as.POSIXct(NA),n)
StartDays <- c(rep(as.POSIXct(NA),n))
StartDays <- c(rep(as.POSIXct(NA),n))
as.POSIXct(NA)
rep(as.POSIXct(NA),n)
StartDays <- c(rep(as.POSIXct(NA),n))
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays
StartDays <- c(rep(as.POSIXlt(NA),n))
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- c(rep(as.POSIXct(NA),n))
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- c(rep(as.POSIXct(NA),n))
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays
StartDays <- c(rep(as.POSIXlt(NA),n))
StartDays[1] <- as.POSIXlt(data[[1]]$StartDateTime[1])
StartDays <- c(rep(as.POSIXct(NA),n))
StartDays[1] <- as.POSIXct(data[[1]]$StartDateTime[1])
StartDays <- c(rep(as.POSIXlt(NA),n))
StartDays[1] <- as.POSIXct(data[[1]]$StartDateTime[1])
?POSIXlt
as.POSIXlt()
?as.POSIXlt()
StartDays <- c(rep((NA,),n))
StartDays <- c(rep((NA,n))
StartDays <- c(rep((NA,n))
StartDays <- c(rep(NA,n))
StartDays[1] <- as.POSIXct(data[[1]]$StartDateTime[1])
StartDats[1] = data[[1]]$StartDateTime[1]
StartDays[1] = data[[1]]$StartDateTime[1]
data[[1]]$StartDateTime[1]
StartDays[1]
StartDays[1] = as.POSIXlt(data[[1]]$StartDateTime[1])
