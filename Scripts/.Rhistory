# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
result <- consumption_plot(temp,tempq)
result <- consumption_plot(temp2,tempq2)
InactiveQ = c(rep(NA,n))
for (i in 1:n)
{
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2,makeplot=FALSE)
InactiveQ[i]=result[1]
}
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ = c(rep(NA,n))
for (i in 1:n)
{
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2,makeplot=FALSE)
InactiveQ[i]=result[1]
}
InactiveQ
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ = c(rep(NA,n))
for (i in 1:n)
{
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ[i]=result[1]
}
result
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ = c(rep(NA,n))
InactiveTemp = c(rep(NA,n))
for (i in 1:n)
{
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ[i]=result[3]
InactiveTemp[i]=result(1)
}
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ = c(rep(NA,n))
InactiveTemp = c(rep(NA,n))
for (i in 1:n)
{
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ[i]=result[3]
InactiveTemp[i]=result(1)
}
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ = c(rep(NA,n))
InactiveTemp = c(rep(NA,n))
for (i in 1:n)
{
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ[i]=result[3]
InactiveTemp[i]=result(1)
}
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ = c(rep(NA,n))
InactiveTemp = c(rep(NA,n))
for (i in 1:n)
{
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ[i]=result[3]
InactiveTemp[i]=result[1]
}
InactiveQ
InactiveQ=max(InactiveQ)
InactiveQ==max(InactiveQ)
InactiveQ==max(InactiveQ))
(InactiveQ==max(InactiveQ))
InactiveQ
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ = c(rep(NA,n))
InactiveTemp = c(rep(NA,n))
for (i in 1:n)
{
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ[i]=result[3]
InactiveTemp[i]=result[1]
}
minQ = which(InactiveQ==max(InactiveQ))
# Plotting max inactive consumption
minQ = which(InactiveQ==max(InactiveQ))
tmp <- weather[(weather$StartDateTime <= EndDays[minQ]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[minQ],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[minQ]]$CoolingDegree*data[[minQ]]$Flow
# Removing NA's
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
# Plotting max inactive consumption
maxQ = which(InactiveQ==max(InactiveQ))
tmp <- weather[(weather$StartDateTime <= EndDays[maxQ]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[maxQ],]
temp <- tmp$Temperature
tempq <- data[[maxQ]]$CoolingDegree*data[[maxQ]]$Flow
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
# Plotting max inactive consumption
maxQ = which(InactiveQ==max(InactiveQ))
# Plotting min inactive consumption
minQ = which(InactiveQ==min(InactiveQ))
tmp <- weather[(weather$StartDateTime <= EndDays[minQ]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[minQ],]
temp <- tmp$Temperature
tempq <- data[[minQ]]$CoolingDegree*data[[minQ]]$Flow
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
# Plotting max inactive consumption
maxQ = which(InactiveQ==max(InactiveQ))
tmp <- weather[(weather$StartDateTime <= EndDays[maxQ]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[maxQ],]
temp <- tmp$Temperature
tempq <- data[[maxQ]]$CoolingDegree*data[[maxQ]]$Flow
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
# Plotting min inactive consumption
minQ = which(InactiveQ==min(InactiveQ))
tmp <- weather[(weather$StartDateTime <= EndDays[minQ]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[minQ],]
temp <- tmp$Temperature
tempq <- data[[minQ]]$CoolingDegree*data[[minQ]]$Flow
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
data[[36]]$Flow
data[[36]]$Flow
plot(data[[36]]$Flow)
tail(data[[36]]$Flow)
# Plotting flow for the minQ house
plot(data[[minQ]]$Flow)
# Plotting the first house
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
InactiveQ = c(rep(NA,n))
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
# Plotting the first house
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
InactiveQ = c(rep(NA,n))
InactiveTemp = c(rep(NA,n))
for (i in 1:n)
{
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2)
InactiveQ[i]=result[3]
InactiveTemp[i]=result[1]
}
# Plotting min inactive consumption
minQ = which(InactiveQ==min(InactiveQ))
tmp <- weather[(weather$StartDateTime <= EndDays[minQ]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[minQ],]
temp <- tmp$Temperature
tempq <- data[[minQ]]$CoolingDegree*data[[minQ]]$Flow
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
# Plotting max inactive consumption
maxQ = which(InactiveQ==max(InactiveQ))
tmp <- weather[(weather$StartDateTime <= EndDays[maxQ]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[maxQ],]
temp <- tmp$Temperature
tempq <- data[[maxQ]]$CoolingDegree*data[[maxQ]]$Flow
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
# Plotting flow for the minQ house
plot(data[[minQ]]$Flow)
# Plotting the first house
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
# Plotting the first house
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
# Plotting the first house
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
# Plotting the first house
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
# Defining subsets
temp <- tmp$Temperature
tempq <- data[[1]]$CoolingDegree*data[[1]]$Flow
# Removing NA's
temp2 <- temp#[!(is.na(tempq))]
tempq2 <- tempq#[!(is.na(tempq))]
# Plotting the first house
result <- consumption_plot(1,temp2,tempq2,makeplot = TRUE)
InactiveQ = c(rep(NA,n))
InactiveTemp = c(rep(NA,n))
for (i in 1:n)
InactiveQ = c(rep(NA,n))
InactiveTemp = c(rep(NA,n))
for (i in 1:n)
{
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(i,temp2,tempq2,makeplot=TRUE)
InactiveQ[i]=result[3]
InactiveTemp[i]=result[1]
}
?confint
# Plotting min inactive consumption
minQ = which(InactiveQ==min(InactiveQ))
tmp <- weather[(weather$StartDateTime <= EndDays[minQ]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[minQ],]
temp <- tmp$Temperature
tempq <- data[[minQ]]$CoolingDegree*data[[minQ]]$Flow
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(temp2,tempq2,makeplot = TRUE)
result <- consumption_plot(minQ,temp2,tempq2,makeplot = TRUE)
result <- consumption_plot(maxQ,temp2,tempq2,makeplot = TRUE)
# Plotting min inactive consumption
minQ = which(InactiveQ==min(InactiveQ))
tmp <- weather[(weather$StartDateTime <= EndDays[minQ]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[minQ],]
temp <- tmp$Temperature
tempq <- data[[minQ]]$CoolingDegree*data[[minQ]]$Flow
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(minQ,temp2,tempq2,makeplot = TRUE)
# Plotting max inactive consumption
maxQ = which(InactiveQ==max(InactiveQ))
tmp <- weather[(weather$StartDateTime <= EndDays[maxQ]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[maxQ],]
temp <- tmp$Temperature
tempq <- data[[maxQ]]$CoolingDegree*data[[maxQ]]$Flow
temp2 <- temp[!(is.na(tempq))]
tempq2 <- tempq[!(is.na(tempq))]
result <- consumption_plot(maxQ,temp2,tempq2,makeplot = TRUE)
bestpar <- optimx(par = c(x1 = 13.5, i1 = 6.5, i2 = 3),
fn = SSR,
method = "Nelder-Mead")
bestpar
?data.frame
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
AnalyzeConsumption(data,1)
AnalyzeConsumption(data,houselist=1)
AnalyzeConsumption(data,houselist=1)
source("Piecewise-opti.R")
AnalyzeConsumption(data,houselist=1)
source("Piecewise-opti.R")
AnalyzeConsumption(data,houselist=1)
# Removing NA's
assign("temp2", value = temp[!(is.na(tempq))], envir = parent.frame())
temp <- tmp$Temperature
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
i=1
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
assign("temp2", value = temp[!(is.na(tempq))], envir = parent.frame())
tmp <- weather[(weather$StartDateTime <= EndDays[i]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[i],]
temp <- tmp$Temperature
tempq <- data[[i]]$CoolingDegree*data[[i]]$Flow
# Removing NA's
assign("temp2", value = temp[!(is.na(tempq))], envir = parent.frame())
assign("tempq2", value = tempq[!(is.na(tempq))], envir = parent.frame())
result <- PiecewiseOpti(i,temp2,tempq2,makeplot)
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Getting the weather and data for 1st house
tmp <- weather[(weather$StartDateTime <= EndDays[1]),]
tmp <- tmp[tmp$StartDateTime >= StartDays[1],]
AnalyzeConsumption(data,houselist=1)
result <- AnalyzeConsumption(data,houselist=1)
result
result <- AnalyzeConsumption(data,houselist=1,makeplot=TRUE)
result <- AnalyzeConsumption(data,houselist=1:n,makeplot=TRUE)
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Plotting the first house
result <- AnalyzeConsumption(data,houselist=1:n,makeplot=TRUE)
rm(list=c(temp2,temp2q),envir=parent.frame())
rm(list=c(temp2,tempq2),envir=parent.frame())
# Plotting the first house
result <- AnalyzeConsumption(data,houselist=1:n,makeplot=TRUE)
# Plotting the first house
result <- AnalyzeConsumption(data,houselist=1,makeplot=TRUE)
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Plotting the first house
result <- AnalyzeConsumption(data,houselist=1,makeplot=TRUE)
warnings()
?rm
source("Piecewise-opti.R")
# Plotting the first house
result <- AnalyzeConsumption(data,houselist=1,makeplot=TRUE)
# Plotting the first house
result <- AnalyzeConsumption(data,houselist=1,makeplot=TRUE)
result
result[1,]
result[,1]
# Plotting min inactive consumption
minQ = which(result[,1]==min(result[,1]))
result <- AnalyzeConsumption(data,houselist = minQ,makeplot = TRUE)
# Getting data from all houses without plotting
result <- AnalyzeConsumption(data,houselist=1:n,makeplot=FALSE)
# Plotting min inactive consumption
minQ = which(result[,1]==min(result[,1]))
result <- AnalyzeConsumption(data,houselist = minQ,makeplot = TRUE)
# Plotting the first house
AnalyzeConsumption(data,houselist=1,makeplot=TRUE)
# Getting data from all houses without plotting
result <- AnalyzeConsumption(data,houselist=1:n,makeplot=FALSE)
# Plotting min inactive consumption
minQ = which(result[,1]==min(result[,1]))
AnalyzeConsumption(data,houselist = minQ,makeplot = TRUE)
# Plotting max inactive consumption
maxQ = which(result[,1]==max(result[,1]))
AnalyzeConsumption(data,houselist = maxQ,makeplot = TRUE)
# Plotting flow for the minQ house
plot(data[[minQ]]$Flow)
rm(list=ls())
source("data.R")
source("Piecewise-opti.R")
# Plotting the first house
AnalyzeConsumption(houselist=1,makeplot=TRUE)
# Plotting ALL houses
AnalyzeConsumption(houselist=1:n,makeplot=TRUE)
rm(list=ls())
