ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = sol, type = 'l', col = 'red')
SEIRsol <-  as.data.frame(ode(y = SEIR_y, times = seq(0,1000,0.1), func = SEIRmodel, parms = SEIR_p))
# R(.)
plot(R ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,30000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = sol, type = 'l', col = 'red')
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of Dimensionel SIR and SEIR Model')
plot(I ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(I ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of I(t) of Dimensionel SIR and SEIR Model')
plot(R ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,30000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of R(t) of Dimensionel SIR and SEIR Model')
SEIR_beta = 7*10^(-6)
SEIR_gamma = 1/5
SEIR_eta = 1/2
SEIR_p <- c(beta = SEIR_beta, gamma = SEIR_gamma, eta = SEIR_eta)
SEIR_S0 = 100000
SEIR_E0 = 0
SEIR_I0 = 100
SEIR_y <- c(S = SEIR_S0, E = SEIR_E0, I = SEIR_I0, R = 0)
SEIRsol <-  as.data.frame(ode(y = SEIR_y, times = seq(0,1000,0.1), func = SEIRmodel, parms = SEIR_p))
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of Dimensionel SIR and SEIR Model')
# I(.)
plot(I ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(I ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of I(t) of Dimensionel SIR and SEIR Model')
# E(.)
# R(.)
plot(R ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,30000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of R(t) of Dimensionel SIR and SEIR Model')
SEIR_beta = 7*10^(-3)
SEIR_gamma = 1/5
SEIR_eta = 1/2
SEIR_p <- c(beta = SEIR_beta, gamma = SEIR_gamma, eta = SEIR_eta)
SEIR_S0 = 100000
SEIR_E0 = 0
SEIR_I0 = 100
SEIR_y <- c(S = SEIR_S0, E = SEIR_E0, I = SEIR_I0, R = 0)
SEIRsol <-  as.data.frame(ode(y = SEIR_y, times = seq(0,1000,0.1), func = SEIRmodel, parms = SEIR_p))
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of Dimensionel SIR and SEIR Model')
# I(.)
plot(I ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(I ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of I(t) of Dimensionel SIR and SEIR Model')
# E(.)
# R(.)
plot(R ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,30000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of R(t) of Dimensionel SIR and SEIR Model')
SEIR_beta = 7*10^(-12)
SEIR_gamma = 1/5
SEIR_eta = 1/2
SEIR_p <- c(beta = SEIR_beta, gamma = SEIR_gamma, eta = SEIR_eta)
SEIR_S0 = 100000
SEIR_E0 = 0
SEIR_I0 = 100
SEIR_y <- c(S = SEIR_S0, E = SEIR_E0, I = SEIR_I0, R = 0)
SEIRsol <-  as.data.frame(ode(y = SEIR_y, times = seq(0,1000,0.1), func = SEIRmodel, parms = SEIR_p))
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of Dimensionel SIR and SEIR Model')
# I(.)
plot(I ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(I ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of I(t) of Dimensionel SIR and SEIR Model')
# E(.)
# R(.)
plot(R ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,30000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of R(t) of Dimensionel SIR and SEIR Model')
SEIR_beta = 2.3*10^(-6)
SEIR_gamma = 1/5
SEIR_eta = 1/2
SEIR_p <- c(beta = SEIR_beta, gamma = SEIR_gamma, eta = SEIR_eta)
SEIR_S0 = 100000
SEIR_E0 = 0
SEIR_I0 = 100
SEIR_y <- c(S = SEIR_S0, E = SEIR_E0, I = SEIR_I0, R = 0)
SEIRsol <-  as.data.frame(ode(y = SEIR_y, times = seq(0,1000,0.1), func = SEIRmodel, parms = SEIR_p))
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of Dimensionel SIR and SEIR Model')
# I(.)
plot(I ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(I ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of I(t) of Dimensionel SIR and SEIR Model')
# E(.)
# R(.)
plot(R ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,30000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of R(t) of Dimensionel SIR and SEIR Model')
SEIRmodel <- function(t, y, p) {
with(as.list(c(y,p)),{
dSdt <- -beta*S*I
dEdt <- beta*S*I-eta*E
dIdt <- eta*E-gamma*I
dRdt = gamma*I
dydt <- c(dSdt, dEdt, dIdt, dRdt)
return(list(dydt))
})
}
SEIR_beta = 2.3*10^(-6)
SEIR_gamma = 1/5
SEIR_eta = 1/2
SEIR_p <- c(beta = SEIR_beta, gamma = SEIR_gamma, eta = SEIR_eta)
SEIR_S0 = 100000
SEIR_E0 = 0
SEIR_I0 = 100
SEIR_y <- c(S = SEIR_S0, E = SEIR_E0, I = SEIR_I0, R = 0)
SEIRsol <-  as.data.frame(ode(y = SEIR_y, times = seq(0,1000,0.1), func = SEIRmodel, parms = SEIR_p))
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of Dimensionel SIR and SEIR Model')
# I(.)
plot(I ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(I ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of I(t) of Dimensionel SIR and SEIR Model')
# E(.)
# R(.)
plot(R ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,30000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of R(t) of Dimensionel SIR and SEIR Model')
# I(.)
plot(I ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,1000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(I ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = sol, type = 'l', col = 'red')
# R(.)
plot(R ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,30000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = sol, type = 'l', col = 'red')
# Opgave 2.6 --------------------------------------------------------------
gamma = 1/7
beta = 4.6*10^(-6)
p <- c(beta = beta, gamma = gamma)
I0 = 141.176
S0 = 36957
y <- c(S = S0, I = I0, R = 0)
sol <-  as.data.frame(ode(y = y, times = seq(0,410,0.01), func = SIRmodel, parms = p))
plot(S~time, data = sol, type = 'l', col = 'blue', ylim = c(0,55000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R~time, data = sol, type = 'l', col = 'green')
lines(I~time,data = sol, type = 'l', col = 'red')
plot(S~time, data = sol, type = 'l', col = 'blue', ylim = c(0,40000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R~time, data = sol, type = 'l', col = 'green')
lines(I~time,data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S', 'I', 'R'), col = c(4,2,3), lty = 1, bty = 'n')
plot(S~time, data = sol, type = 'l', col = 'blue', ylim = c(0,35000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
plot(S~time, data = sol, type = 'l', col = 'blue', ylim = c(0,38000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R~time, data = sol, type = 'l', col = 'green')
lines(I~time,data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S', 'I', 'R'), col = c(4,2,3), lty = 1, bty = 'n')
title('Plotted Numeric Solution of Dimensionel SIR Model with New Parameters')
title('Numeric Solution of Dimensionel SIR Model with New Parameters')
# Opgave 2.6 --------------------------------------------------------------
gamma = 1/7
beta = 4.6*10^(-6)
p <- c(beta = beta, gamma = gamma)
I0 = 141.176
S0 = 36957
y <- c(S = S0, I = I0, R = 0)
sol <-  as.data.frame(ode(y = y, times = seq(0,410,0.01), func = SIRmodel, parms = p))
plot(S~time, data = sol, type = 'l', col = 'blue', ylim = c(0,38000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R~time, data = sol, type = 'l', col = 'green')
lines(I~time,data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S', 'I', 'R'), col = c(4,2,3), lty = 1, bty = 'n')
title('Numeric Solution of Dimensionel SIR Model with New Parameters')
# Opgave 2.6 --------------------------------------------------------------
gamma = 1/7
beta = 4.6*10^(-6)
p <- c(beta = beta, gamma = gamma)
I0 = 141.176
S0 = 36957
y <- c(S = S0, I = I0, R = 0)
sol <-  as.data.frame(ode(y = y, times = seq(0,410,0.01), func = SIRmodel, parms = p))
plot(S~time, data = sol, type = 'l', col = 'blue', ylim = c(0,38000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R~time, data = sol, type = 'l', col = 'green')
lines(I~time,data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S', 'I', 'R'), col = c(4,2,3), lty = 1, bty = 'n')
title('Numeric Solution of Dimensionel SIR Model with New Parameters')
# Finding the max infected
maxInfectedIdx <- which.max(sol$I)
# Finding maximum infected at once
maxInfected <- sol[maxInfectedIdx,3]
sol$time[maxInfectedIdx]
plot(I~time,data = sol, type = 'l', col = 'red', ylim = c(0, 5500),  xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
legend('topright', legend = 'I', col = 2, lty = 1, bty = 'n')
title('Numeric Solution of I(t) with New Parameters')
abline(v = sol$time[maxInfectedIdx], col = 1, lty = 3)
plot(I~time,data = sol, type = 'l', col = 'red', ylim = c(0, 1000),  xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
legend('topright', legend = 'I', col = 2, lty = 1, bty = 'n')
title('Numeric Solution of I(t) with New Parameters')
abline(v = sol$time[maxInfectedIdx], col = 1, lty = 3)
abline(h = sol$I[maxInfectedIdx], col = 1, lty = 3)
plot(I~time,data = sol, type = 'l', col = 'red', ylim = c(0, 700),  xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
legend('topright', legend = 'I', col = 2, lty = 1, bty = 'n')
title('Numeric Solution of I(t) with New Parameters')
abline(v = sol$time[maxInfectedIdx], col = 1, lty = 3)
abline(h = sol$I[maxInfectedIdx], col = 1, lty = 3)
epiDone = sol$time[which(sol$I < 1)][which.max(sol$I[which(sol$I < 1)])] # 196.56
epidemiSlutIdx = which(sol$time == epiDone)
# Opgave 2.7 --------------------------------------------------------------
SEIRmodel <- function(t, y, p) {
with(as.list(c(y,p)),{
dSdt <- -beta*S*I
dEdt <- beta*S*I-eta*E
dIdt <- eta*E-gamma*I
dRdt = gamma*I
dydt <- c(dSdt, dEdt, dIdt, dRdt)
return(list(dydt))
})
}
SEIR_beta = 2.3*10^(-6)
SEIR_gamma = 1/5
SEIR_eta = 1/2
SEIR_p <- c(beta = SEIR_beta, gamma = SEIR_gamma, eta = SEIR_eta)
SEIR_S0 = 100000
SEIR_E0 = 0
SEIR_I0 = 100
## Functions
library(deSolve)
SIRmodel <- function(t, y, p){
with(as.list(c(y,p)),{
dSdt <- -beta*S*I
dIdt <- beta*S*I-gamma*I
dRdt = gamma*I
dydt <- c(dSdt, dIdt, dRdt)
return(list(dydt))
})
}
# parameters
SIR_gamma = 1/5
SIR_beta = 2.3*10^(-6)
SIR_p <- c(beta = SIR_beta, gamma = SIR_gamma)
# Initial condition
SIR_I0 = 100
SIR_S0 = 100000
SIR_y <- c(S = SIR_S0, I = SIR_I0, R = 0)
SIRsol <-  as.data.frame(ode(y = SIR_y, times = seq(0,410,0.01), func = SIRmodel, parms = SIR_p))
# plotting solution
plot(S ~ time, data = SIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = SIRsol, type = 'l', col = 'green')
lines(I ~ time, data = SIRsol, type = 'l', col = 'red')
legend('topright', legend = c('S', 'I', 'R'), col = c(4,2,3), lty = 1, bty = 'n')
title('Plotted Numeric Solution of Dimensionel SIR Model')
# Finding the max infected
SIRmaxInfectedIdx <- which.max(SIRsol$I)
# Finding maximum infected at once
SIRmaxInfected <- SIRsol[SIRmaxInfectedIdx,3]
# Only plotting I(t)
plot(I ~ time, data = SIRsol, type = 'l', col = 'red', ylim = c(0, 1050),  xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
legend('topright', legend = 'I', col = 2, lty = 1, bty = 'n')
title('Plotted Numeric Solution of I(t) for Dimensionel SIR Model')
abline(v = SIRsol$time[SIRmaxInfectedIdx], col = 1, lty = 3)
abline(h = SIRsol$I[SIRmaxInfectedIdx], col = 1, lty = 3)
# Hvor mange i befolkningen vil opleve epidemien?
# Hvorn?r rammer vi under 1 smittet
SIRepiDone = SIRsol$time[which(SIRsol$I < 1)][which.max(SIRsol$I[which(SIRsol$I < 1)])] #402.79
SIRepidemiSlutIdx = which(SIRsol$time == SIRepiDone)
# antal
SIRtotalAntalSmittede = sum(SIRsol[SIRepidemiSlutIdx,3:4]) # sol$I + sol$R til det tidspunkt, hvor epidimien er slut
# andel
SIRtotalAndelSmittede = SIRtotalAntalSmittede/sum(SIRsol[SIRepidemiSlutIdx,2:4])
# Opgave 2.6 --------------------------------------------------------------
gamma = 1/7
beta = 4.6*10^(-6)
# Opgave 2.6 --------------------------------------------------------------
gamma = 1/7
beta = 4.6*10^(-6)
p <- c(beta = beta, gamma = gamma)
I0 = 141.176
S0 = 36957
y <- c(S = S0, I = I0, R = 0)
sol <-  as.data.frame(ode(y = y, times = seq(0,410,0.01), func = SIRmodel, parms = p))
plot(S~time, data = sol, type = 'l', col = 'blue', ylim = c(0,38000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R~time, data = sol, type = 'l', col = 'green')
lines(I~time,data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S', 'I', 'R'), col = c(4,2,3), lty = 1, bty = 'n')
title('Numeric Solution of Dimensionel SIR Model with New Parameters')
# Finding the max infected
maxInfectedIdx <- which.max(sol$I)
# Finding maximum infected at once
maxInfected <- sol[maxInfectedIdx,3]
plot(I~time,data = sol, type = 'l', col = 'red', ylim = c(0, 700),  xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
legend('topright', legend = 'I', col = 2, lty = 1, bty = 'n')
title('Numeric Solution of I(t) with New Parameters')
abline(v = sol$time[maxInfectedIdx], col = 1, lty = 3)
abline(h = sol$I[maxInfectedIdx], col = 1, lty = 3)
epiDone = sol$time[which(sol$I < 1)][which.max(sol$I[which(sol$I < 1)])] # 196.56
epidemiSlutIdx = which(sol$time == epiDone)
# antal
totalAntalSmittede = sum(sol[epidemiSlutIdx,3:4]) # sol$I + sol$R til det tidspunkt, hvor epidimien er slut
# andel
totalAndelSmittede = totalAntalSmittede/sum(sol[epidemiSlutIdx,2:4])
# Opgave 2.7 --------------------------------------------------------------
SEIRmodel <- function(t, y, p) {
with(as.list(c(y,p)),{
dSdt <- -beta*S*I
dEdt <- beta*S*I-eta*E
dIdt <- eta*E-gamma*I
dRdt = gamma*I
dydt <- c(dSdt, dEdt, dIdt, dRdt)
return(list(dydt))
})
}
# Opgave 2.7 --------------------------------------------------------------
SEIRmodel <- function(t, y, p) {
with(as.list(c(y,p)),{
dSdt <- -beta*S*I
dEdt <- beta*S*I-eta*E
dIdt <- eta*E-gamma*I
dRdt = gamma*I
dydt <- c(dSdt, dEdt, dIdt, dRdt)
return(list(dydt))
})
}
SEIR_beta = 2.3*10^(-6)
SEIR_gamma = 1/5
SEIR_eta = 1/2
SEIR_p <- c(beta = SEIR_beta, gamma = SEIR_gamma, eta = SEIR_eta)
SEIR_S0 = 100000
SEIR_E0 = 0
SEIR_I0 = 100
SEIR_y <- c(S = SEIR_S0, E = SEIR_E0, I = SEIR_I0, R = 0)
SEIRsol <-  as.data.frame(ode(y = SEIR_y, times = seq(0,410,0.01), func = SEIRmodel, parms = SEIR_p))
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of Dimensionel SIR and SEIR Model')
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = SIRsol, type = 'l', col = 'red')
source('~/Dropbox/DTU/6. semester/01604 Modellering af populationer og sygdomsspredning/Obligatoriske opgaver/Obligatorisk opgave 2/biofuckObl2.R', echo=TRUE)
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = SIRsol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of S(t) of Dimensionel SIR and SEIR Model')
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,10000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = SIRsol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of S(t) of Dimensionel SIR and SEIR Model')
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(10000,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = SIRsol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(80000,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = SIRsol, type = 'l', col = 'red')
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(50000,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = SIRsol, type = 'l', col = 'red')
# S(.)
plot(S ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(70000,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(S ~ time, data = SIRsol, type = 'l', col = 'red')
legend('topright', legend = c('S for SEIR', 'S for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of S(t) of Dimensionel SIR and SEIR Model')
# I(.)
plot(I ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,1000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(I ~ time, data = SIRsol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of I(t) of Dimensionel SIR and SEIR Model')
# R(.)
plot(R ~ time, data = SEIRsol, type = 'l', col = 'blue', ylim = c(0,30000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = SIRsol, type = 'l', col = 'red')
legend('topright', legend = c('I for SEIR', 'I for SIR'), col = c(4,2), lty = 1, bty = 'n')
title('Numeric Solutions of R(t) of Dimensionel SIR and SEIR Model')
# Biofuck obligatorisk aflevering 2
## Functions
library(deSolve)
SIRmodel <- function(t, y, p){
with(as.list(c(y,p)),{
dSdt <- -beta*S*I
dIdt <- beta*S*I-gamma*I
dRdt = gamma*I
dydt <- c(dSdt, dIdt, dRdt)
return(list(dydt))
})
}
# Opgave 2.5 --------------------------------------------------------------
# Solving the model
# parameters
SIR_gamma = 1/5
SIR_beta = 2.3*10^(-6)
SIR_p <- c(beta = SIR_beta, gamma = SIR_gamma)
# Initial condition
SIR_I0 = 100
SIR_S0 = 100000
SIR_y <- c(S = SIR_S0, I = SIR_I0, R = 0)
SIRsol <-  as.data.frame(ode(y = SIR_y, times = seq(0,410,0.01), func = SIRmodel, parms = SIR_p))
# plotting solution
plot(S ~ time, data = SIRsol, type = 'l', col = 'blue', ylim = c(0,100000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R ~ time, data = SIRsol, type = 'l', col = 'green')
lines(I ~ time, data = SIRsol, type = 'l', col = 'red')
legend('topright', legend = c('S', 'I', 'R'), col = c(4,2,3), lty = 1, bty = 'n')
title('Plotted Numeric Solution of Dimensionel SIR Model')
# Only plotting I(t)
plot(I ~ time, data = SIRsol, type = 'l', col = 'red', ylim = c(0, 1050),  xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
legend('topright', legend = 'I', col = 2, lty = 1, bty = 'n')
title('Plotted Numeric Solution of I(t) for Dimensionel SIR Model')
abline(v = SIRsol$time[SIRmaxInfectedIdx], col = 1, lty = 3)
abline(h = SIRsol$I[SIRmaxInfectedIdx], col = 1, lty = 3)
# Opgave 2.6 --------------------------------------------------------------
gamma = 1/7
beta = 4.6*10^(-6)
p <- c(beta = beta, gamma = gamma)
I0 = 141.176
S0 = 36957
y <- c(S = S0, I = I0, R = 0)
sol <-  as.data.frame(ode(y = y, times = seq(0,410,0.01), func = SIRmodel, parms = p))
plot(S~time, data = sol, type = 'l', col = 'blue', ylim = c(0,38000), xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
lines(R~time, data = sol, type = 'l', col = 'green')
lines(I~time,data = sol, type = 'l', col = 'red')
legend('topright', legend = c('S', 'I', 'R'), col = c(4,2,3), lty = 1, bty = 'n')
title('Numeric Solution of Dimensionel SIR Model with New Parameters')
# Finding the max infected
maxInfectedIdx <- which.max(sol$I)
# Finding maximum infected at once
maxInfected <- sol[maxInfectedIdx,3]
plot(I~time,data = sol, type = 'l', col = 'red', ylim = c(0, 700),  xlab = 'Time [days]',
ylab = 'Infected [Number of Persons]')
legend('topright', legend = 'I', col = 2, lty = 1, bty = 'n')
title('Numeric Solution of I(t) with New Parameters')
abline(v = sol$time[maxInfectedIdx], col = 1, lty = 3)
abline(h = sol$I[maxInfectedIdx], col = 1, lty = 3)
epiDone = sol$time[which(sol$I < 1)][which.max(sol$I[which(sol$I < 1)])] # 196.56
epidemiSlutIdx = which(sol$time == epiDone)
# antal
totalAntalSmittede = sum(sol[epidemiSlutIdx,3:4]) # sol$I + sol$R til det tidspunkt, hvor epidimien er slut
# andel
totalAndelSmittede = totalAntalSmittede/sum(sol[epidemiSlutIdx,2:4])
