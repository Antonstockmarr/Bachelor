HourTmp <- vector("list",length=length(weather))
for (k in 2:length(weather))
{
Attribute <- data.frame(matrix(ncol=25,nrow = length(day.data[[i]]$Date)))
names(Attribute) <- c("Date",levels(as.factor(hour(data[[i]]$ObsTime))))
Attribute$Date <- day.data[[i]]$Date
for (j in 0:23)
{
tmp <- weather[weather$ObsTime <= data[[i]]$ObsTime[1],]
tmp <- tmp[tmp$ObsTime >= tail(data[[i]]$ObsTime,1),]
Attribute[j+2] <- tmp[(hour(data[[i]]$ObsTime) == j),k]
}
HourTmp[[k-1]] <- data.matrix(Attribute)
}
HourData[[i]]<- list(Consumption = data.matrix(Cons), Temperature = HourTmp[[1]], WindSpeed = HourTmp[[2]],
WindDirection = HourTmp[[3]], SunHour = HourTmp[[4]], Condition = HourTmp[[5]],
UltravioletIndex = HourTmp[[6]], MeanSeaLevelPressure = HourTmp[[7]], DewPoint = HourTmp[[8]],
Humidity = HourTmp[[9]], PrecipitationProbability = HourTmp[[10]],
IsHistoricalEstimated = HourTmp[[11]], Radiation = HourTmp[[12]])
}
save(HourData)
save(HourData,"HourData.Rdata")
?save
save.image()
save(HourData,"HourData.Rdata")
save(HourData,file="HourData.Rdata")
# Plot of the hour values as percentage of day
#Avgcons <- c(1:n)
#Sumcons <- c(1:n)
Houravg = matrix(c(rep(0,24*n)),nrow = 24)
#for (i in 1:n)
#{
#  Sumcons[i] <- sum(weatherCons[[i]]$Consumption,na.rm = TRUE)
#  Avgcons[i] <- mean(weatherCons[[i]]$Consumption,na.rm = TRUE)
#}
for (i in 1:n)
{
Houravg[,i] <- colMeans(HourData[[i]]$Consumption,na.rm = TRUE)[-1]
Houravg[,i] <- Houravg[,i]/sum(Houravg[,i])
}
Houravg <- Houravg[c(2:24,1),]
rownames(Houravg) <- c('00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23')
colnames(Houravg) <- c(1:n)
tt <- Houravg
library('fields')
image.plot(t(tt[rev(order(row.names(tt))),]), axes=FALSE,
lab.breaks=NULL,main = 'Average consumption of all houses during the day')
install.packages("fields")
library('fields')
image.plot(t(tt[rev(order(row.names(tt))),]), axes=FALSE,
lab.breaks=NULL,main = 'Average consumption of all houses during the day')
axis(2, at=seq(1+1/48,0-1/48, length=13), labels=c('00','02','04','06','08','10','12','14','16','18','20','22','24'), lwd=0.1, pos=-0.01,las=1)
abline(h=c(seq(1,0, length=24)+1/48),lwd=0.75)
# Consumption in the summer period
for (i in 1:n)
{
SummerDays <- day.weather$Date[day.weather$Temperature >= 15]
tmp <- HourData[[i]]$Consumption[,'Date']
tmp_index <- sapply(tmp,function(x) x %in% SummerDays)
Houravg[,i] <- colMeans(HourData[[i]]$Consumption[tmp_index,],na.rm = TRUE)[-1]
Houravg[,i] <- Houravg[,i]/sum(Houravg[,i])
}
Houravg <- Houravg[c(2:24,1),]
summeravg <- Houravg
rownames(Houravg) <- c('00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23')
colnames(Houravg) <- c(1:n)
tt <- Houravg
image.plot(t(tt[rev(order(row.names(tt))),]), axes=FALSE,
lab.breaks=NULL,main = 'Average consumption of all houses (summer period)')
axis(2, at=seq(1+1/48,0-1/48, length=13), labels=c('00','02','04','06','08','10','12','14','16','18','20','22','24'), lwd=0.1, pos=-0.01,las=1)
abline(h=c(seq(1,0, length=24)+1/48),lwd=0.75)
mcons_summer <-apply(Houravg,1,mean)
# Consumption in the winter period
for (i in 1:n)
{
WinterDays <- day.weather$Date[day.weather$Temperature < 12]
tmp <- HourData[[i]]$Consumption[,'Date']
tmp_index <- sapply(tmp,function(x) x %in% WinterDays)
Houravg[,i] <- colMeans(HourData[[i]]$Consumption[tmp_index,],na.rm = TRUE)[-1]
Houravg[,i] <- Houravg[,i]/sum(Houravg[,i])
}
Houravg <- Houravg[c(2:24,1),]
winteravg <- Houravg
rownames(Houravg) <- c('00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23')
colnames(Houravg) <- c(1:n)
tt <- Houravg
image.plot(t(tt[rev(order(row.names(tt))),]), axes=FALSE,
lab.breaks=NULL,main = 'Average consumption of all houses (winter period)')
axis(2, at=seq(1+1/48,0-1/48, length=13), labels=c('00','02','04','06','08','10','12','14','16','18','20','22','24'), lwd=0.1, pos=-0.01,las=1)
abline(h=c(seq(1,0, length=24)+1/48),lwd=0.75)
library('reshape2')
tmp <- data.frame("cons"=Houravg)
tmp$id <- rownames(Houravg)
newdata <- melt(tmp)
model <- lm(value ~ id, data=newdata)
Houravg['06',]+Houravg['07',]+Houravg['08',]+Houravg['09',]
mcons_winter <-apply(winteravg,1,mean)
sum(mcons_winter[c(1:5,24)])
mcons_summer <-apply(summeravg,1,mean)
sum(mcons_summer[c(1:5,24)])
plot(mcons_winter,ylim=c(0.035,0.055),type='l',col="blue",cex.axis = 1,xaxt="n",ylab = "Fraction of daily consumption per hour",xlab = "Hour")
axis(side=1,at=c(0,6,12,18,24),labels=c("00","06","12","18","24"))
lines(mcons_summer,col='red')
legend(x="topright",legend=c("Winter period","Summer period"),lty=c(1,1),col =c("blue","red"))
for (i in 1:n)
{
plot(summeravg[,i],ylim=c(0,0.1),type='l',col="red")
lines(winteravg[,i],col='blue')
}
4/24
# Consumption in winter minus summer
for (i in 1:n)
4/24
{
WinterDays <- day.weather$Date[day.weather$Temperature < 12]
tmp <- HourData[[i]]$Consumption[,'Date']
tmp_index <- sapply(tmp,function(x) x %in% WinterDays)
Houravg[,i] <- colMeans(HourData[[i]]$Consumption[tmp_index,],na.rm = TRUE)[-1]
SummerDays <- day.weather$Date[day.weather$Temperature >= 15]
tmp <- HourData[[i]]$Consumption[,'Date']
tmp_index <- sapply(tmp,function(x) x %in% SummerDays)
Houravg[,i] <- Houravg[,i] - colMeans(HourData[[i]]$Consumption[tmp_index,],na.rm = TRUE)[-1]
Houravg[,i] <- Houravg[,i]/sum(Houravg[,i])
}
Houravg <- Houravg[c(2:24,1),]
rownames(Houravg) <- c('00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23')
colnames(Houravg) <- c(1:n)
tt <- Houravg
image.plot(t(tt[rev(order(row.names(tt))),]), axes=FALSE,
lab.breaks=NULL,main = 'Average consumption of all houses (winter - summer)')
axis(2, at=seq(1+1/48,0-1/48, length=13), labels=c('00','02','04','06','08','10','12','14','16','18','20','22','24'), lwd=0.1, pos=-0.01,las=1)
abline(h=c(seq(1,0, length=24)+1/48),lwd=0.75)
head(tt)
tt[i,]
tt[,i]
quantile(tt[,i])
quantile(tt[,i])[4]
tt[,i]>quantile(tt[,i])[4]
ttn<-tt
for(i in 1:n){
quantile(tt[,i])[4]
ttn[,i]<-tt[,i]>quantile(tt[,i])[4]
}
head(ttn)
image.plot(t(ttn[rev(order(row.names(ttn))),]), axes=FALSE,
lab.breaks=NULL,main = 'Average consumption of all houses (winter - summer)')
axis(2, at=seq(1+1/48,0-1/48, length=13), labels=c('00','02','04','06','08','10','12','14','16','18','20','22','24'), lwd=0.1, pos=-0.01,las=1)
abline(h=c(seq(1,0, length=24)+1/48),lwd=0.75)
k <-1:n
Long <- k[Datalengths>=360]
Short <- k[Datalengths<360]
# Defining data used for modeling
model.data <- weatherCons
# Plot of the hour values as percentage of day
#Avgcons <- c(1:n)
#Sumcons <- c(1:n)
Houravg = matrix(c(rep(0,24*n)),nrow = 24)
#for (i in 1:n)
#{
#  Sumcons[i] <- sum(weatherCons[[i]]$Consumption,na.rm = TRUE)
#  Avgcons[i] <- mean(weatherCons[[i]]$Consumption,na.rm = TRUE)
#}
for (i in 1:n)
{
Houravg[,i] <- colMeans(HourData[[i]]$Consumption,na.rm = TRUE)[-1]
Houravg[,i] <- Houravg[,i]/sum(Houravg[,i])
}
Houravg <- Houravg[c(2:24,1),]
rownames(Houravg) <- c('00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23')
colnames(Houravg) <- c(1:n)
tt <- Houravg
library('fields')
image.plot(t(tt[rev(order(row.names(tt))),]), axes=FALSE,
lab.breaks=NULL,main = 'Average consumption of all houses during the day')
axis(2, at=seq(1+1/48,0-1/48, length=13), labels=c('00','02','04','06','08','10','12','14','16','18','20','22','24'), lwd=0.1, pos=-0.01,las=1)
abline(h=c(seq(1,0, length=24)+1/48),lwd=0.75)
# Consumption in the summer period
for (i in 1:n)
{
SummerDays <- day.weather$Date[day.weather$Temperature >= 15]
tmp <- HourData[[i]]$Consumption[,'Date']
tmp_index <- sapply(tmp,function(x) x %in% SummerDays)
Houravg[,i] <- colMeans(HourData[[i]]$Consumption[tmp_index,],na.rm = TRUE)[-1]
Houravg[,i] <- Houravg[,i]/sum(Houravg[,i])
}
Houravg <- Houravg[c(2:24,1),]
summeravg <- Houravg
rownames(Houravg) <- c('00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23')
colnames(Houravg) <- c(1:n)
tt <- Houravg
image.plot(t(tt[rev(order(row.names(tt))),]), axes=FALSE,
lab.breaks=NULL,main = 'Average consumption of all houses (summer period)')
axis(2, at=seq(1+1/48,0-1/48, length=13), labels=c('00','02','04','06','08','10','12','14','16','18','20','22','24'), lwd=0.1, pos=-0.01,las=1)
abline(h=c(seq(1,0, length=24)+1/48),lwd=0.75)
mcons_summer <-apply(Houravg,1,mean)
#Finns plot
ttavg<-tt[,1]
for(i in 2:n){
ttavg<-ttavg+tt[,i]
}
ttavg<-ttavg/n
plot(ttavg)
plot(c(1:23,0),ttavg)
plot(1:24,ttavg)
plot(1:24,ttavg,lty=1)
plot(1:24,ttavg,lty=1)
plot(1:24,ttavg,type="l")
abline(h=quantile(ttavg)[4])
abline(h=quantile(ttavg)[4],lty=2,col="gray")
plot(1:24,ttavg,type="l")
abline(h=quantile(ttavg)[4],lty=2,col="gray")
abline(h=quantile(ttavg)[3],lty=2,col="gray")
abline(h=quantile(ttavg)[2],lty=2,col="gray")
plot(1:24,ttavg)#,type="l")
abline(h=quantile(ttavg)[4],lty=2,col="gray")
abline(h=quantile(ttavg)[3],lty=2,col="gray")
abline(h=quantile(ttavg)[1],lty=2,col="gray")
quantile(ttavg)
quantile(ttavg)[3]
quantile(ttavg)[2]
plot(1:24,ttavg)#,type="l")
abline(h=quantile(ttavg)[4],lty=2,col="gray")
abline(h=quantile(ttavg)[3],lty=2,col="gray")
abline(h=quantile(ttavg)[2],lty=2,col="gray")
plot(1:24,ttavg,type="l")
abline(h=quantile(ttavg)[4],lty=2,col="gray")
abline(h=quantile(ttavg)[3],lty=2,col="gray")
abline(h=quantile(ttavg)[2],lty=2,col="gray")
plot(1:24,ttavg)#,type="l")
abline(h=quantile(ttavg)[4],lty=2,col="gray")
abline(h=quantile(ttavg)[3],lty=2,col="gray")
abline(h=quantile(ttavg)[2],lty=2,col="gray")
plot(1:24,ttavg,col=Wcol[3])
points(k[ttavg>=quantile(ttavg)[4]],ttavg[ttavg>=quantile(ttavg)[4]],col=Wcol[4])
ttavg>=quantile(ttavg)[4]
k[ttavg>=quantile(ttavg)[4]]
k=1:24
plot(k,ttavg,col=Wcol[3])
points(k[ttavg>=quantile(ttavg)[4]],ttavg[ttavg>=quantile(ttavg)[4]],col=Wcol[4])
abline(h=quantile(ttavg)[4],lty=2,col="gray")
abline(h=quantile(ttavg)[3],lty=2,col="gray")
abline(h=quantile(ttavg)[2],lty=2,col="gray")
points(k[ttavg<=quantile(ttavg)[2]],ttavg[ttavg<=quantile(ttavg)[2]],col=Wcol[2])
plot(k,ttavg,col=Wcol[3],pch=19)
points(k[ttavg>=quantile(ttavg)[4]],ttavg[ttavg>=quantile(ttavg)[4]],col=Wcol[4],pch=19)
points(k[ttavg<=quantile(ttavg)[2]],ttavg[ttavg<=quantile(ttavg)[2]],col=Wcol[2],pch=19)
abline(h=quantile(ttavg)[4],lty=2,col="gray")
abline(h=quantile(ttavg)[3],lty=2,col="gray")
abline(h=quantile(ttavg)[2],lty=2,col="gray")
# Consumption in the winter period
for (i in 1:n)
{}
sum(ttavg)
plot(k,ttavg,col=Wcol[3],pch=19,ylab ="% of avg consumption each hour")
plot(k,ttavg,col=Wcol[3],pch=19,ylab ="% of avg consumption each hour",xlab="Hour")
points(k[ttavg>=quantile(ttavg)[4]],ttavg[ttavg>=quantile(ttavg)[4]],col=Wcol[4],pch=19)
points(k[ttavg<=quantile(ttavg)[2]],ttavg[ttavg<=quantile(ttavg)[2]],col=Wcol[2],pch=19)
abline(h=quantile(ttavg)[4],lty=2,col="gray")
abline(h=quantile(ttavg)[3],lty=2,col="gray")
abline(h=quantile(ttavg)[2],lty=2,col="gray")
lmSummary_est[,3:6]
names(data[[1]])
tmp.d1
source('C:/Users/mikke/Desktop/6. sem/Bach/Bachelor-f19/Scripts/data.R', echo=TRUE)
source('C:/Users/mikke/Desktop/6. sem/Bach/Bachelor-f19/Scripts/MultipleRegression.R', echo=TRUE)
source('C:/Users/mikke/Desktop/6. sem/Bach/Bachelor-f19/Scripts/data.R', echo=TRUE)
source('C:/Users/mikke/Desktop/6. sem/Bach/Bachelor-f19/Scripts/MultipleRegression.R', echo=TRUE)
# Full regression model for "long" houses
for (i in Long) {
print(paste('Full Model of long house ',i))
model.tmp <- model.data[[i]]
model.tmp <- model.tmp[model.tmp$Temperature <= 12,]
Splinebasis <- BSplines(model.tmp$WindDirection)
# Splines
tmp.wind <- Splinebasis*model.tmp$WindSpeed
model.tmp$North <- tmp.wind[,3]
model.tmp$East <- tmp.wind[,4]
model.tmp$South <- tmp.wind[,1]
model.tmp$West <- tmp.wind[,2]
lmMultipleFull[[i]] <- lm(Consumption ~ Temperature*(North + East + South + West)+MeanSeaLevelPressure+Radiation+WinterBreak+SpringBreak+AutumnBreak+ChristmasBreak+Weekend, data = model.tmp)
# Checking model assumptions
par(mfrow = c(2,2), mar = c(3,3,3,1) + 0.1)
plot(lmMultipleFull[[i]])
title(paste("Daily consumption for house ", i, "using multiple lm"), outer=TRUE, adj = 0.5, line = -1.25)
# Testing for normality
#s.test[[i]] <- shapiro.test(lmMultipleFull[[i]]$residuals)
#print(s.test[[i]]$p.value)
# Saving coefficients
lmFull_est_L[match(i,Long),] <- summary(lmMultipleFull[[i]])$coefficients[,1]
lmFull_p_L[match(i,Long),] <- summary(lmMultipleFull[[i]])$coefficients[,4]
}
# Full regression model for "short" houses
for (i in Short) {
print(paste('Full Model of Short house ',i))
model.tmp <- model.data[[i]]
model.tmp <- model.tmp[model.tmp$Temperature <= 12,]
Splinebasis <- BSplines(model.tmp$WindDirection)
tmp.wind <- Splinebasis*model.tmp$WindSpeed
model.tmp$North <- tmp.wind[,3]
model.tmp$East <- tmp.wind[,4]
model.tmp$South <- tmp.wind[,1]
model.tmp$West <- tmp.wind[,2]
lmMultipleFull[[i]] <- lm(Consumption ~ Temperature*(North + East + South + West)+MeanSeaLevelPressure+Radiation+AutumnBreak+ChristmasBreak+Weekend, data = model.tmp)
# Checking model assumptions
par(mfrow = c(2,2), mar = c(3,3,3,1) + 0.1)
plot(lmMultipleFull[[i]])
title(paste("Daily consumption for house ", i, "using multiple lm"), outer=TRUE, adj = 0.5, line = -1.25)
# Testing for normality
s.test[[i]] <- shapiro.test(lmMultipleFull[[i]]$residuals)
print(s.test[[i]]$p.value)
lmFull_est_S[match(i,Short),] <- summary(lmMultipleFull[[i]])$coefficients[,1]
lmFull_p_S[match(i,Short),] <- summary(lmMultipleFull[[i]])$coefficients[,4]
}
source('C:/Users/mikke/Desktop/6. sem/Bach/Bachelor-f19/Scripts/MultipleRegression.R', echo=TRUE)
source('C:/Users/mikke/Desktop/6. sem/Bach/Bachelor-f19/Scripts/MultipleRegression.R', echo=TRUE)
for (i in 1:18) {
print(paste('Modeling house ',i))
model.tmp <- model.data[[i]]
model.tmp <- model.tmp[model.tmp$Temperature <= 12,]
Splinebasis <- BSplines(model.tmp$WindDirection)
#  wd <- model.tmp$WindDirection[order(model.tmp$WindDirection)]
#  wd[wd<45] <- wd[wd<45]+360
tmp.wind <- Splinebasis*model.tmp$WindSpeed#[order(wd)]
#  tmp.wind <- model.tmp$WindSpeed[order(model.tmp$WindDirection)]
model.tmp$North <- tmp.wind[,3]
model.tmp$East <- tmp.wind[,4]
model.tmp$South <- tmp.wind[,1]
model.tmp$West <- tmp.wind[,2]
lmMultipleNoP[[i]] <- lm(Consumption ~ Temperature*(North + East + South + West)+
Radiation, data = model.tmp)
#lmMultiple[[i]] <- stepP(lmMultipleNoP[[i]])
# Checking model assumptions
par(mfrow = c(2,2), mar = c(3,3,3,1) + 0.1)
(plot(lmMultipleNoP[[i]]$object))
title(paste("Daily consumption for house ", i), outer=TRUE, adj = 0.5, line = -1.25)
# Testing for normality
sMultiple.test[[i]] <- shapiro.test(lmMultipleNoP[[i]]$residuals)
print(sMultiple.test[[i]]$p.value)
lmSummary_est[i,] <- summary(lmMultipleNoP[[i]])$coefficients[,1]
lmSummary_p[i,] <- summary(lmMultipleNoP[[i]])$coefficients[,4]
# Wind profile plot
par(mfrow = c(1,1))
model.Wind<-data.frame(Consumption=model.tmp$Consumption,Temperature=model.tmp$Temperature,Radiation=model.tmp$Radiation,N=model.tmp$North,E=model.tmp$East,S=model.tmp$South,W=model.tmp$West)
lmMultipleNoP[[i]] <- lm(Consumption ~ .+Temperature*(N + E + S + W),data = model.Wind)
Splinebasis2 <- BSplines(1:360)
newData = data.frame(Temperature = rep(0, 360), # 0 grader
Radiation = rep(0, 360), # Om natten
N = Splinebasis2[,3],
E = Splinebasis2[,4],
S = Splinebasis2[,1],
W = Splinebasis2[,2])
Wind.Pred[[i]]<-data.frame(predict(object=lmMultipleNoP[[i]], newdata=newData, interval = "confidence", level = 0.95))
plot(Wind.Pred[[i]]$fit,type='l',ylim=range(Wind.Pred[[i]]$lwr,Wind.Pred[[i]]$upr),main=paste("hus: ",i))
lines(Wind.Pred[[i]]$upr,lty=2)
lines(Wind.Pred[[i]]$lwr,lty=2)
abline(v=c(0,90,180,270,360), col="gray", lty=2, lwd=1)
}
source('C:/Users/mikke/Desktop/6. sem/Bach/Bachelor-f19/Scripts/MultipleRegression.R', echo=TRUE)
source('C:/Users/mikke/Desktop/6. sem/Bach/Bachelor-f19/Scripts/MultipleRegression.R', echo=TRUE)
for (i in 1:n) {
print(paste('Modeling house ',i))
model.tmp <- model.data[[i]]
model.tmp <- model.tmp[model.tmp$Temperature <= 12,]
Splinebasis <- BSplines(model.tmp$WindDirection)
#  wd <- model.tmp$WindDirection[order(model.tmp$WindDirection)]
#  wd[wd<45] <- wd[wd<45]+360
tmp.wind <- Splinebasis*model.tmp$WindSpeed#[order(wd)]
#  tmp.wind <- model.tmp$WindSpeed[order(model.tmp$WindDirection)]
model.tmp$North <- tmp.wind[,3]
model.tmp$East <- tmp.wind[,4]
model.tmp$South <- tmp.wind[,1]
model.tmp$West <- tmp.wind[,2]
lmMultipleNoP[[i]] <- lm(Consumption ~ Temperature*(North + East + South + West)+
Radiation, data = model.tmp)
# Checking model assumptions
par(mfrow = c(2,2), mar = c(3,3,3,1) + 0.1)
plot(lmMultipleNoP[[i]])
title(paste("Daily consumption for house ", i), outer=TRUE, adj = 0.5, line = -1.25)
# Testing for normality
sMultiple.test[[i]] <- shapiro.test(lmMultipleNoP[[i]]$residuals)
print(sMultiple.test[[i]]$p.value)
lmSummary_est[i,] <- summary(lmMultipleNoP[[i]])$coefficients[,1]
lmSummary_p[i,] <- summary(lmMultipleNoP[[i]])$coefficients[,4]
# Wind profile plot
par(mfrow = c(1,1))
model.Wind<-data.frame(Consumption=model.tmp$Consumption,Temperature=model.tmp$Temperature,Radiation=model.tmp$Radiation,N=model.tmp$North,E=model.tmp$East,S=model.tmp$South,W=model.tmp$West)
lmMultipleNoP[[i]] <- lm(Consumption ~ .+Temperature*(N + E + S + W),data = model.Wind)
Splinebasis2 <- BSplines(1:360)
newData = data.frame(Temperature = rep(0, 360), # 0 grader
Radiation = rep(0, 360), # Om natten
N = Splinebasis2[,3],
E = Splinebasis2[,4],
S = Splinebasis2[,1],
W = Splinebasis2[,2])
Wind.Pred[[i]]<-data.frame(predict(object=lmMultipleNoP[[i]], newdata=newData, interval = "confidence", level = 0.95))
plot(Wind.Pred[[i]]$fit,type='l',ylim=range(Wind.Pred[[i]]$lwr,Wind.Pred[[i]]$upr),main=paste("hus: ",i))
lines(Wind.Pred[[i]]$upr,lty=2)
lines(Wind.Pred[[i]]$lwr,lty=2)
abline(v=c(0,90,180,270,360), col="gray", lty=2, lwd=1)
}
t.est <- as.table(lmSummary_est)
# Saving estimates in a .csv file
write.csv2(t.est, file = "lmMult_est.csv", row.names = TRUE)
t.pvalues <- as.table(lmSummary_p)
# Saving p-values in a .csv file
write.csv2(t.pvalues, file = "lmMult_pvalues.csv", row.names = TRUE)
# Making +*** table
lmSummary_star <- matrix(rep('',12*n),nrow = n)
for(i in 1:n){
lmSummary_star[i,1]<-i
for(j in 2:12){
if(lmSummary_est[i,j-1]<0){
lmSummary_star[i,j] <-paste(lmSummary_star[i,j],'-')
}else{
lmSummary_star[i,j] <-paste(lmSummary_star[i,j],'+')
}
if(lmSummary_p[i,j-1]<0.05){
lmSummary_star[i,j] <-paste(lmSummary_star[i,j],'*')
if(lmSummary_p[i,j-1]<0.01){
lmSummary_star[i,j] <-paste(lmSummary_star[i,j],'*')
}
if(lmSummary_p[i,j-1]<0.001){
lmSummary_star[i,j] <-paste(lmSummary_star[i,j],'*')
}
}else if(lmSummary_p[i,j-1]<0.1){
lmSummary_star[i,j] <-paste(lmSummary_star[i,j],'.')
}
}
}
colnames(lmSummary_star) <- c("HouseIndex","I","T","N","E","S","W","SolaR","T:N","T:E","T:S","T:W")
write.csv2(lmSummary_star, file = "lmMult_star.csv", row.names = TRUE)
write.csv2(lmSummary_star[Long,], file = "lmMult_L_star.csv", row.names = TRUE)
write.csv2(lmSummary_star[Short,], file = "lmMult_S_star.csv", row.names = TRUE)
star_count_array <- lmSummary_star
star_count_array <- gsub("\\.", "", star_count_array)
star_count_array <- nchar(star_count_array)
star_count_array <- star_count_array>3
colSums(star_count_array)/n
# Counting negative estimates
sum(lmSummary_est[,3:6] < 0) / sum(lmSummary_est[,3:6] < 1000000)
sum(lmSummary_est[,8:11] < 0) / sum(lmSummary_est[,8:11] < 1000000)
# Investigating parameters from model
summary(lmMultipleNoP[[1]])
par(mfrow=c(2,2))
# Checking model assumptions
for (i in 1:n)
{
plot(lmMultiple[[i]]$object)
}
# Saving slopes and p-values
modelListSlope <- vector(mode="list",length=n)
modelListPval <- vector(mode="list",length=n)
# Checking model assumptions
for (i in 1:n)
{
plot(lmMultiple[[i]]$object)
}
plot(lmMultipleNoP[[i]])
{
plot(lmMultipleNoP[[i]])
}
# Checking model assumptions
for (i in 1:n)
{
plot(lmMultipleNoP[[i]])
}
#Finns plot
load("HourData.Rdata")
ttavg<-tt[,1]
source('C:/Users/mikke/Desktop/6. sem/Bach/Bachelor-f19/Scripts/HourData.R', echo=TRUE)
for (i in 1:n) {
print(paste('Modeling house ',i))
model.tmp <- model.data[[i]]
model.tmp <- model.tmp[model.tmp$Temperature <= 12,]
Splinebasis <- BSplines(model.tmp$WindDirection)
#  wd <- model.tmp$WindDirection[order(model.tmp$WindDirection)]
#  wd[wd<45] <- wd[wd<45]+360
tmp.wind <- Splinebasis*model.tmp$WindSpeed#[order(wd)]
#  tmp.wind <- model.tmp$WindSpeed[order(model.tmp$WindDirection)]
model.tmp$North <- tmp.wind[,3]
model.tmp$East <- tmp.wind[,4]
model.tmp$South <- tmp.wind[,1]
model.tmp$West <- tmp.wind[,2]
lmMultipleNoP[[i]] <- lm(Consumption ~ Temperature*(North + East + South + West)+
Radiation, data = model.tmp)
# Checking model assumptions
par(mfrow = c(2,2), mar = c(3,3,3,1) + 0.1)
plot(lmMultipleNoP[[i]])
title(paste("Daily consumption for house ", i), outer=TRUE, adj = 0.5, line = -1.25)
# Testing for normality
sMultiple.test[[i]] <- shapiro.test(lmMultipleNoP[[i]]$residuals)
print(sMultiple.test[[i]]$p.value)
lmSummary_est[i,] <- summary(lmMultipleNoP[[i]])$coefficients[,1]
lmSummary_p[i,] <- summary(lmMultipleNoP[[i]])$coefficients[,4]
# Wind profile plot
par(mfrow = c(1,1))
model.Wind<-data.frame(Consumption=model.tmp$Consumption,Temperature=model.tmp$Temperature,Radiation=model.tmp$Radiation,N=model.tmp$North,E=model.tmp$East,S=model.tmp$South,W=model.tmp$West)
lmMultipleNoP[[i]] <- lm(Consumption ~ .+Temperature*(N + E + S + W),data = model.Wind)
Splinebasis2 <- BSplines(1:360)
newData = data.frame(Temperature = rep(0, 360), # 0 grader
Radiation = rep(0, 360), # Om natten
N = Splinebasis2[,3],
E = Splinebasis2[,4],
S = Splinebasis2[,1],
W = Splinebasis2[,2])
Wind.Pred[[i]]<-data.frame(predict(object=lmMultipleNoP[[i]], newdata=newData, interval = "confidence", level = 0.95))
plot(Wind.Pred[[i]]$fit,type='l',ylim=range(Wind.Pred[[i]]$lwr,Wind.Pred[[i]]$upr),main=paste("hus: ",i))
lines(Wind.Pred[[i]]$upr,lty=2)
lines(Wind.Pred[[i]]$lwr,lty=2)
abline(v=c(0,90,180,270,360), col="gray", lty=2, lwd=1)
}
source('C:/Users/mikke/Desktop/6. sem/Bach/Bachelor-f19/Scripts/MultipleRegression.R', echo=TRUE)
