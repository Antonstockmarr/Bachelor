dat=matrix(NA, nrow=10,ncol=200)
for(i in 1:10){
dat[i,]=arima.sim(model=list(ar=0.9,ma=c(2,0.5)),n=200,sd=0.2)
}
acf(dat[1,])
plot(dat[1,],type="l",col=colors[1],ylim=c(-5,5),main="The 10 simulated ARMA(1,2) models",ylab="Simulation value",xlab="Iteration")
lm=50
for(i in 2:10){
lines(dat[i,],type="l",col=colors[i])
}
acf1<-acf(dat[1,],plot=FALSE,lag.max = lm)
acf1$acf[,1,1]
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-0.5,1),type="l",col=colors[1],main="Blah")
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm)
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-0.5,1),type="l",col=colors[1],main="Autocorrelation funtion for the 10 simulations")
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm)
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
?acf
acf1<-acf(dat[1,],plot=FALSE,lag.max = lm)
acf1$acf[,1,1]
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-0.5,1),type="l",col=colors[1],main="Autocorrelation funtion for the 10 simulations")
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm)
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
plot(dat[1,],type="l")
pacf(dat[1,])
pacf1<-pacf(dat[1,],plot=FALSE,lag.max = lm)
pacf1$acf[,1,1]
plot(pacf1,xlim=c(.5,lm-.5),ylim=c(-.5,1),type="l",col=1)
for(i in 2:10){
pacftmp<-pacf(dat[i,],plot=FALSE,lag.max = lm)
lines(1:lm,pacftmp$acf[,1,1],col=i)
}
pacf1<-pacf(dat[1,],plot=FALSE,lag.max = lm,main="Partial autocorrelation funtion for the 10 simulations")
pacf1$acf[,1,1]
plot(pacf1,xlim=c(.5,lm-.5),ylim=c(-.5,1),type="l",col=1,main="Partial autocorrelation funtion for the 10 simulations")
for(i in 2:10){
pacftmp<-pacf(dat[i,],plot=FALSE,lag.max = lm)
lines(1:lm,pacftmp$acf[,1,1],col=i)
}
plot(pacf1,xlim=c(.5,lm-1),ylim=c(-.5,1),type="l",col=1,main="Partial autocorrelation funtion for the 10 simulations")
plot(pacf1,xlim=c(.5,lm-1.8),ylim=c(-.5,1),type="l",col=1,main="Partial autocorrelation funtion for the 10 simulations")
plot(pacf1,xlim=c(.5,lm-2),ylim=c(-.5,1),type="l",col=1,main="Partial autocorrelation funtion for the 10 simulations")
for(i in 2:10){
pacftmp<-pacf(dat[i,],plot=FALSE,lag.max = lm)
lines(1:lm,pacftmp$acf[,1,1],col=i)
}
avars=rep(NA,10)
for(i in 1:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm,type="covariance")
avars[i]<-acftmp$acf[1,1,1]
}
rm(list=ls())
par(mfrow=c(1,1))
set.seed(0)
colors=rainbow(10)
# Simulate 10 ARMA realisations (arima.sim(1,0,2))
dat=matrix(NA, nrow=10,ncol=200)
for(i in 1:10){
dat[i,]=arima.sim(model=list(ar=0.9,ma=c(2,0.5)),n=200,sd=0.2)
}
acf(dat[1,])
plot(dat[1,],type="l",col=colors[1],ylim=c(-5,5),main="The 10 simulated ARMA(1,2) models",ylab="Simulation value",xlab="Observation")
lm=50
for(i in 2:10){
lines(dat[i,],type="l",col=colors[i])
}
acf1<-acf(dat[1,],plot=FALSE,lag.max = lm)
acf1$acf[,1,1]
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-0.5,1),type="l",col=colors[1],main="Autocorrelation function for the 10 simulations")
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm)
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm)
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
plot(dat[1,],type="l")
pacf(dat[1,])
plot(dat[1,],type="l")
pacf(dat[1,])
pacf1<-pacf(dat[1,],plot=FALSE,lag.max = lm)
pacf1$acf[,1,1]
plot(pacf1,xlim=c(.5,lm-2),ylim=c(-.5,1),type="l",col=1,main="Partial autocorrelation function for the 10 simulations")
for(i in 2:10){
pacftmp<-pacf(dat[i,],plot=FALSE,lag.max = lm)
lines(1:lm,pacftmp$acf[,1,1],col=i)
}
avars=rep(NA,10)
for(i in 1:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm,type="covariance")
avars[i]<-acftmp$acf[1,1,1]
}
## Analytiske gammaer udregnet i maple.
g=rep(NA,lm+1)
g[1]<-2.412631579
g[2]<-2.309368421
g[3]<-2.098431579
for(i in 4:(lm+1)){
k=i-1
g[i]<-0.9^(k-2)*g[3]
}
acf1<-acf(dat[1,],plot=FALSE,lag.max = lm,type="covariance")
acf1$acf[,1,1]
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-1.3,2.5),type="l",col=colors[1])
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm,type="covariance")
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
points(0:50,g)
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-1.3,2.5),type="l",col=colors[1],main="Numerical and analytical autocovariance")
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm,type="covariance")
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
points(0:50,g)
legend(40,2,legend=c("Analytical autocovariance","Numerical autocovariance"),pch=c(1,NA),lty=c(1,NA))
legend(30,2,legend=c("Analytical autocovariance","Numerical autocovariance"),pch=c(1,NA),lty=c(1,NA))
legend(20,2,legend=c("Analytical autocovariance","Numerical autocovariance"),pch=c(1,NA),lty=c(1,NA))
legend(20,2,legend=c("Analytical autocovariance","Numerical autocovariance"),pch=c(1,NA),lty=c(NA,1))
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-1.3,2.5),type="l",col=colors[1],main="Numerical and analytical autocovariance")
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm,type="covariance")
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
points(0:50,g)
legend(20,2,legend=c("Analytical autocovariance","Numerical autocovariance"),pch=c(1,NA),lty=c(NA,1))
legend(20,2,legend=c("Analytical autocovariance","Numerical autocovariances"),pch=c(1,NA),lty=c(NA,1))
legend(25,2,legend=c("Analytical autocovariance","Numerical autocovariances"),pch=c(1,NA),lty=c(NA,1))
legend(25,2.2,legend=c("Analytical autocovariance","Numerical autocovariances"),pch=c(1,NA),lty=c(NA,1))
acf1<-acf(dat[1,],plot=FALSE,lag.max = lm,type="covariance")
acf1$acf[,1,1]
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-1.3,2.5),type="l",col=colors[1],main="Numerical and analytical autocovariance")
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm,type="covariance")
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
points(0:50,g)
legend(25,2.2,legend=c("Analytical autocovariance","Numerical autocovariances"),pch=c(1,NA),lty=c(NA,1))
plot(c(190,208,213,223,237,214,221,201,191,184,184,189,188,207,221,225),type="o",xlim=c(1,18),ylim=c(184,250),ylab="strøm i guess...")
points(c(17,18),c(232.6,210.65),col=2,pch=19)
points(c(5,6),c(237,214),col=3,pch=19)
points(c(17,17,18,18),c(232.6+c(-1,1)*qnorm(0.975)*7,210.65+c(-1,1)*qnorm(0.975)*sqrt(61.25)),col=2,pch=3)
qnorm(0.975)*7
qnorm(0.975)*sqrt(61.25)
legend(7,245,legend=c("Given Data","Predicted points","Prediction intervals","Last season in regard to predictions"),pch=c(1,NA),lty=c(NA,1))
legend(6,245,legend=c("Given Data","Predicted points","Prediction intervals","Last season in regard to predictions"),pch=c(1,NA),lty=c(NA,1))
legend(6,245,legend=c("Given Data","Predicted points","Prediction intervals","Last season in regard to predictions"),pch=c(1,NA,19,3,19),lty=c(NA,1))
legend(6,245,legend=c("Given Data","Predicted points","Prediction intervals","Last season in regard to predictions"),pch=c(1,NA,19,3,19),lty=c(1,1,NA,NA),col=c(1,2,2,3))
legend(6,245,legend=c("Given Data","Predicted points","Prediction intervals","Last season in regard to predictions"),pch=c(1,19,3,19),lty=c(1,NA,NA,NA),col=c(1,2,2,3))
plot(c(190,208,213,223,237,214,221,201,191,184,184,189,188,207,221,225),type="o",xlim=c(1,18),ylim=c(184,250),ylab="strøm i guess...")
points(c(17,18),c(232.6,210.65),col=2,pch=19)
points(c(5,6),c(237,214),col=3,pch=19)
points(c(17,17,18,18),c(232.6+c(-1,1)*qnorm(0.975)*7,210.65+c(-1,1)*qnorm(0.975)*sqrt(61.25)),col=2,pch=3)
legend(6,245,legend=c("Given Data","Predicted points","Prediction intervals","Last season in regard to predictions"),pch=c(1,19,3,19),lty=c(1,NA,NA,NA),col=c(1,2,2,3))
plot(c(190,208,213,223,237,214,221,201,191,184,184,189,188,207,221,225),type="o",xlim=c(1,18),ylim=c(184,250),ylab="combined electricity consumption (GWh)")
points(c(17,18),c(232.6,210.65),col=2,pch=19)
points(c(5,6),c(237,214),col=3,pch=19)
points(c(17,17,18,18),c(232.6+c(-1,1)*qnorm(0.975)*7,210.65+c(-1,1)*qnorm(0.975)*sqrt(61.25)),col=2,pch=3)
legend(6,245,legend=c("Given Data","Predicted points","Prediction intervals","Last season in regard to predictions"),pch=c(1,19,3,19),lty=c(1,NA,NA,NA),col=c(1,2,2,3))
plot(c(190,208,213,223,237,214,221,201,191,184,184,189,188,207,221,225),type="o",xlim=c(1,18),ylim=c(184,250),ylab="combined electricity consumption (GWh)",main="Prediction of seasonal AR model")
points(c(17,18),c(232.6,210.65),col=2,pch=19)
points(c(5,6),c(237,214),col=3,pch=19)
points(c(17,17,18,18),c(232.6+c(-1,1)*qnorm(0.975)*7,210.65+c(-1,1)*qnorm(0.975)*sqrt(61.25)),col=2,pch=3)
legend(6,245,legend=c("Given Data","Predicted points","Prediction intervals","Last season in regard to predictions"),pch=c(1,19,3,19),lty=c(1,NA,NA,NA),col=c(1,2,2,3))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
rm(list=ls())
par(mfrow=c(1,1))
set.seed(0)
colors=rainbow(10)
# Simulate 10 ARMA realisations (arima.sim(1,0,2))
dat=matrix(NA, nrow=10,ncol=200)
for(i in 1:10){
dat[i,]=arima.sim(model=list(ar=0.9,ma=c(2,0.5)),n=200,sd=0.2)
}
acf(dat[1,])
plot(dat[1,],type="l",col=colors[1],ylim=c(-5,5),main="The 10 simulated ARMA(1,2) models",ylab="Simulation value",xlab="Observation")
lm=50
for(i in 2:10){
lines(dat[i,],type="l",col=colors[i])
}
acf1<-acf(dat[1,],plot=FALSE,lag.max = lm)
acf1$acf[,1,1]
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-0.5,1),type="l",col=colors[1],main="Autocorrelation function for the 10 simulations")
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm)
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
##
plot(dat[1,],type="l")
pacf(dat[1,])
pacf1<-pacf(dat[1,],plot=FALSE,lag.max = lm)
pacf1$acf[,1,1]
plot(pacf1,xlim=c(.5,lm-2),ylim=c(-.5,1),type="l",col=1,main="Partial autocorrelation function for the 10 simulations")
for(i in 2:10){
pacftmp<-pacf(dat[i,],plot=FALSE,lag.max = lm)
lines(1:lm,pacftmp$acf[,1,1],col=i)
}
avars=rep(NA,10)
for(i in 1:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm,type="covariance")
avars[i]<-acftmp$acf[1,1,1]
}
## Analytiske gammaer udregnet i maple.
g=rep(NA,lm+1)
g[1]<-2.412631579
g[2]<-2.309368421
g[3]<-2.098431579
for(i in 4:(lm+1)){
k=i-1
g[i]<-0.9^(k-2)*g[3]
}
acf1<-acf(dat[1,],plot=FALSE,lag.max = lm,type="covariance")
acf1$acf[,1,1]
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-1.3,2.5),type="l",col=colors[1],main="Numerical and analytical autocovariance")
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm,type="covariance")
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
points(0:50,g)
legend(25,2.2,legend=c("Analytical autocovariance","Numerical autocovariances"),pch=c(1,NA),lty=c(NA,1))
## Q2.2
plot(c(190,208,213,223,237,214,221,201,191,184,184,189,188,207,221,225),type="o",xlim=c(1,18),ylim=c(184,250),ylab="combined electricity consumption (GWh)",main="Prediction of seasonal AR model")
points(c(17,18),c(232.6,210.65),col=2,pch=19)
points(c(5,6),c(237,214),col=3,pch=19)
points(c(17,17,18,18),c(232.6+c(-1,1)*qnorm(0.975)*7,210.65+c(-1,1)*qnorm(0.975)*sqrt(61.25)),col=2,pch=3)
legend(6,245,legend=c("Given Data","Predicted points","Prediction intervals","Last season in regard to predictions"),pch=c(1,19,3,19),lty=c(1,NA,NA,NA),col=c(1,2,2,3))
## Q2.3
#model 1
ARMA<- arima.sim(n=200,list(order=c(1,0,0),ar=-0.85))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,0) seasonal model, with S=12")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(12,0,0),ar=c(rep(0,11),0.8)))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (0,0,0)x(1,0,0) seasonal model, with S=12")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(1,0,12),ar=0.8,ma=c(rep(0,11),0.7)))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(0,0,1) seasonal model, with S=12")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(13,0,0),ar=c(0.7,rep(0,10),-0.8,0.56)))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (1,0,0)x(1,0,0) seasonal model, with S=12")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
#model 5
ARMA<- arima.sim(n=200,list(order=c(14,0,0),ar=c(-0.6,-0.6,rep(0,9),-0.8,-0.48,-0.48)))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (2,0,0)x(1,0,0) seasonal model, with S=12")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
ARMA<- arima.sim(n=200,list(order=c(0,0,13),ma=c(-0.7,rep(0,10),0.8,-0.56)))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE),widths=c(1,1),heights = c(1,1))
plot(ARMA,type="l",col=1,ylim=c(-6,6),ylab="Process values",xlab="Time",main="Plot of a (0,0,1)x(0,0,1) seasonal model, with S=12")
par(mar=c(5,4,2,2)+0.1)
acf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
pacf(ARMA,main="",lag.max=50,panel.first=c(abline(v=(1:4)*12,col=2,lty=2)))
rm(list=ls())
par(mfrow=c(1,1))
set.seed(0)
colors=rainbow(10)
# Simulate 10 ARMA realisations (arima.sim(1,0,2))
dat=matrix(NA, nrow=10,ncol=200)
for(i in 1:10){
dat[i,]=arima.sim(model=list(ar=0.9,ma=c(2,0.5)),n=200,sd=0.2)
}
acf(dat[1,])
plot(dat[1,],type="l",col=colors[1],ylim=c(-5,5),main="The 10 simulated ARMA(1,2) models",ylab="Simulation value",xlab="Observation")
lm=50
for(i in 2:10){
lines(dat[i,],type="l",col=colors[i])
}
acf1<-acf(dat[1,],plot=FALSE,lag.max = lm)
acf1$acf[,1,1]
plot(acf1,xlim=c(-.5,lm-2),ylim=c(-0.5,1),type="l",col=colors[1],main="Autocorrelation function for the 10 simulations")
for(i in 2:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm)
lines(0:lm,acftmp$acf[,1,1],col=colors[i])
}
##
plot(dat[1,],type="l")
pacf(dat[1,])
pacf1<-pacf(dat[1,],plot=FALSE,lag.max = lm)
pacf1$acf[,1,1]
plot(pacf1,xlim=c(.5,lm-2),ylim=c(-.5,1),type="l",col=1,main="Partial autocorrelation function for the 10 simulations")
for(i in 2:10){
pacftmp<-pacf(dat[i,],plot=FALSE,lag.max = lm)
lines(1:lm,pacftmp$acf[,1,1],col=i)
}
avars=rep(NA,10)
for(i in 1:10){
acftmp<-acf(dat[i,],plot=FALSE,lag.max = lm,type="covariance")
avars[i]<-acftmp$acf[1,1,1]
}
avars
acf(log(tab$NO2[train]),lag.max = 200)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("data.r")
HourData <- vector("list",length=n)
rotate <- function(x) t(apply(x, 2, rev))
if(FALSE){
# This should only be run once, then saved into a file.
for (i in 1:n)
{
print(i)
Cons <- data.frame(matrix(ncol=25,nrow = length(day.data[[i]]$Date)))#
names(Cons) <- c("Date",levels(as.factor(hour(data[[i]]$ObsTime))))
Cons$Date <- day.data[[i]]$Date
for (j in 0:23)
{
Cons[j+2] <- data[[i]]$Volume[hour(data[[i]]$ObsTime) == j]*data[[i]]$CoolingDegree[hour(data[[i]]$ObsTime) == j]*cc
}
# Byt fuck
HourTmp <- vector("list",length=length(weather))
for (k in 2:length(weather))
{
Attribute <- data.frame(matrix(ncol=25,nrow = length(day.data[[i]]$Date)))
names(Attribute) <- c("Date",levels(as.factor(hour(data[[i]]$ObsTime))))
Attribute$Date <- day.data[[i]]$Date
for (j in 0:23)
{
tmp <- weather[weather$ObsTime <= data[[i]]$ObsTime[1],]
tmp <- tmp[tmp$ObsTime >= tail(data[[i]]$ObsTime,1),]
Attribute[j+2] <- tmp[(hour(data[[i]]$ObsTime) == j),k]
}
HourTmp[[k-1]] <- data.matrix(Attribute)
}
HourData[[i]]<- list(Consumption = data.matrix(Cons), Temperature = HourTmp[[1]], WindSpeed = HourTmp[[2]],
WindDirection = HourTmp[[3]], SunHour = HourTmp[[4]], Condition = HourTmp[[5]],
UltravioletIndex = HourTmp[[6]], MeanSeaLevelPressure = HourTmp[[7]], DewPoint = HourTmp[[8]],
Humidity = HourTmp[[9]], PrecipitationProbability = HourTmp[[10]],
IsHistoricalEstimated = HourTmp[[11]], Radiation = HourTmp[[12]])
}
}
load("HourData.Rdata")
# Plot of the hour values as percentage of day
#Avgcons <- c(1:n)
#Sumcons <- c(1:n)
Houravg = matrix(c(rep(0,24*n)),nrow = 24)
#for (i in 1:n)
#{
#  Sumcons[i] <- sum(weatherCons[[i]]$Consumption,na.rm = TRUE)
#  Avgcons[i] <- mean(weatherCons[[i]]$Consumption,na.rm = TRUE)
#}
for (i in 1:n)
{
Houravg[,i] <- colMeans(HourData[[i]]$Consumption,na.rm = TRUE)[-1]
Houravg[,i] <- Houravg[,i]/sum(Houravg[,i])
}
Houravg <- Houravg[c(2:24,1),]
rownames(Houravg) <- c('00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23')
colnames(Houravg) <- c(1:n)
tt <- Houravg
library('fields')
par(mar = c(2, 2, 2, 1) + 0.1)
image.plot(t(tt[rev(order(row.names(tt))),]), axes=FALSE,
lab.breaks=NULL,main = 'Average consumption of all houses during the day')
axis(2, at=seq(1+1/48,0-1/48, length=13), labels=c('00','02','04','06','08','10','12','14','16','18','20','22','24'), lwd=0.1, pos=-0.01,las=1)
abline(h=c(seq(1,0, length=24)+1/48),lwd=0.75)
# Consumption in the summer period
for (i in 1:n)
{
SummerDays <- day.weather$Date[day.weather$Temperature >= 15]
tmp <- HourData[[i]]$Consumption[,'Date']
tmp_index <- sapply(tmp,function(x) x %in% SummerDays)
Houravg[,i] <- colMeans(HourData[[i]]$Consumption[tmp_index,],na.rm = TRUE)[-1]
Houravg[,i] <- Houravg[,i]/sum(Houravg[,i])
}
Houravg <- Houravg[c(2:24,1),]
summeravg <- Houravg
rownames(Houravg) <- c('00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23')
colnames(Houravg) <- c(1:n)
tt <- Houravg
par(mar = c(2, 2, 2, 1) + 0.1)
image.plot(t(tt[rev(order(row.names(tt))),]), axes=FALSE,
lab.breaks=NULL,main = 'Average consumption of all houses (summer period)')
axis(2, at=seq(1+1/48,0-1/48, length=13), labels=c('00','02','04','06','08','10','12','14','16','18','20','22','24'), lwd=0.1, pos=-0.01,las=1)
abline(h=c(seq(1,0, length=24)+1/48),lwd=0.75)
mcons_summer <-apply(Houravg,1,mean)
# Hour distribution plot
ttavg<-tt[,1]
for(i in 2:n){
ttavg<-ttavg+tt[,i]
}
ttavg<-ttavg/n
k=1:24
plot((k[ttavg>=quantile(ttavg)[2] &  ttavg<=quantile(ttavg)[4]])-.5,ttavg[ttavg>=quantile(ttavg)[2] & ttavg<=quantile(ttavg)[4]],col=Wcol[3],pch=19,ylab ="average consumption per hour (normalized)",xlab="Hour", xaxt ="n",type='h',xlim=c(0,24),ylim=c(0.035,0.053))
points((k[ttavg>=quantile(ttavg)[4]])-.5,ttavg[ttavg>=quantile(ttavg)[4]],col=Wcol[4],type='h')
points((k[ttavg<=quantile(ttavg)[2]])-.5,ttavg[ttavg<=quantile(ttavg)[2]],col=Wcol[2],type = 'h')
points((k[ttavg>=quantile(ttavg)[2] &  ttavg<=quantile(ttavg)[4]])-.5,ttavg[ttavg>=quantile(ttavg)[2] & ttavg<=quantile(ttavg)[4]],col=Wcol[3],pch=19)
points((k[ttavg>=quantile(ttavg)[4]])-.5,ttavg[ttavg>=quantile(ttavg)[4]],col=Wcol[4],pch=19)
points((k[ttavg<=quantile(ttavg)[2]])-.5,ttavg[ttavg<=quantile(ttavg)[2]],col=Wcol[2],pch=19)
abline(h=quantile(ttavg)[4],lty=2,col=Wcol[4],lwd=2)
abline(h=quantile(ttavg)[3],lty=2,col=Wcol[3],lwd=2)
abline(h=quantile(ttavg)[2],lty=2,col=Wcol[2],lwd=2)
legend(x="topright",legend = c("75th percentile","50th percentile","25th percentile"),lty = c(2,2,2),col = c(Wcol[4],Wcol[3],Wcol[2]),lwd=2)
axis(side=1,at=c(0,3,6,9,12,15,18,21,24),labels=c("00","03","06","09","12","15","18","21","24"))
par(mar=c(3,3,2,1), mgp=c(2,0.7,0),mfrow=c(1,1),xpd=FALSE)
plot((k[ttavg>=quantile(ttavg)[2] &  ttavg<=quantile(ttavg)[4]])-.5,ttavg[ttavg>=quantile(ttavg)[2] & ttavg<=quantile(ttavg)[4]],col=Wcol[3],pch=19,ylab ="average consumption per hour (normalized)",xlab="Hour", xaxt ="n",type='h',xlim=c(0,24),ylim=c(0.035,0.053))
points((k[ttavg>=quantile(ttavg)[4]])-.5,ttavg[ttavg>=quantile(ttavg)[4]],col=Wcol[4],type='h')
points((k[ttavg<=quantile(ttavg)[2]])-.5,ttavg[ttavg<=quantile(ttavg)[2]],col=Wcol[2],type = 'h')
points((k[ttavg>=quantile(ttavg)[2] &  ttavg<=quantile(ttavg)[4]])-.5,ttavg[ttavg>=quantile(ttavg)[2] & ttavg<=quantile(ttavg)[4]],col=Wcol[3],pch=19)
points((k[ttavg>=quantile(ttavg)[4]])-.5,ttavg[ttavg>=quantile(ttavg)[4]],col=Wcol[4],pch=19)
points((k[ttavg<=quantile(ttavg)[2]])-.5,ttavg[ttavg<=quantile(ttavg)[2]],col=Wcol[2],pch=19)
abline(h=quantile(ttavg)[4],lty=2,col=Wcol[4],lwd=2)
abline(h=quantile(ttavg)[3],lty=2,col=Wcol[3],lwd=2)
abline(h=quantile(ttavg)[2],lty=2,col=Wcol[2],lwd=2)
legend(x="topright",legend = c("75th percentile","50th percentile","25th percentile"),lty = c(2,2,2),col = c(Wcol[4],Wcol[3],Wcol[2]),lwd=2)
axis(side=1,at=c(0,3,6,9,12,15,18,21,24),labels=c("00","03","06","09","12","15","18","21","24"))
